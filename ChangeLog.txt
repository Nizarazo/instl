22/4/2018 1.7.2.4

    user visible changes:
    * SVNTable.get_immediate_child_items_q had wrong name for svn_item_t table, which caused exception when uninstalling

    programmer visible changes:
    * removed redundant class InstlAdmin.RemoveIfNotSpecificVersion

16/4/2018 1.7.2.3

    user visible changes:
    * added retry mechanism to utils.open_for_read_file_or_url
    * fixed calculation of num_required_files in InstlInstanceSync.mark_required_items

15/4/2018 1.7.2.2

   admin visible changes:
    * detailed self.progress report on verify-repo command

    programmer visible changes:
    * self.progress can change it's total progress dynamically
    * self.progress can have multiple messages which will all be " ".join-ed

9/4/2018 1.7.2.1

    Many changes, to numerous to detail here to shorten execution time and better progress reporting. See commit comments in branches no-alchemy and central_v9_no_alcehmy for details

    admin vidible changes:
    * fixed issue in verify_index_to_repo where !file soirce were reproted as missing

27/2/2018 1.7.0.0

    user visible changes:
    * __include__ can not have the attribute 'destination' to specify a folder where to place the included file
    admin vidible changes:
    * new folder hierarchy on S3: repo-rev is devided to pairs: e.g. repo-rev 123 would be under 01/23
    * support for compressing info_map and index files with zlib, such files will have anew extension .wzlib
    * commands create-links up2s3: option --all-revisions replaced with --revision [all|number]
    * removed usage of RSA signatures and key files which were not used for a long time
    * command read-yaml added option to output the read yaml
    * InstlAdmin.create_links_for_revision disabled the creation of .txt version of the files in instl folder - to save upload time - since they were not useful anyway
    programmer visible changes:
    * utils.download_from_file_or_url was refactored for simplicity and for support of .wzlib files
    * augmentedYaml - added option to not print comments

31/12/2017 1.6.2.18

    programmer visible changes:
    * functions IndexItemsTable.config_var_list_to_db added try/except because config vars are written to db for reference so we can continue even if exception ware raised

10/12/2017 1.6.2.17

    user visible changes:
    * default of copy_dir_to_dir is to delete old files on the target

7/11/2017 1.6.2.16

    user visible changes:
    * Moved the curl folder from bookkeeping to besides the output file, just like the unwtar folder
    * if no logs folder on Desktop invocations file will be written to /Users/USER_NAME/Library/Logs (Mac), 'C:\Users\USER_NAME\AppData\Local\Logs (Win)

31/10/2017 1.6.2.15

    user visible changes:
    * better escaping of characters that cause problems in windows batch "SET=..." assignments

30/10/2017 1.6.2.14

    user visible changes:
    * PlatformSpecificHelperWin.mkdir added (a little) better check if the folder created is actually a folder
        and not a file, so if it is installation will fail earlier

29/10/2017 1.6.2.13

    user visible changes:
    * Mac OS: call chown after copy because offline installers created on Windows might have weird permissions.
    * rsync: --owner --group on each call hopefull to help with the same permissions issue

16/10/2017 1.6.2.12

    user visible changes:
    * new progress message when prepering installer: "check checksum of existing required files ..., so this stage can be properly timed
    * PlatformSpecificHelperBase.progress_percent is used in InstlClientCopy.create_copy_instructions so that progress bar does not go 100% when sync stage has many items but copy stage has few.
    programmer visible changes:
    * new method PlatformSpecificHelperBase.progress_percent to increase progress by a percentage of the current total.
    * merged yaml writing improvements from scanilic project
    * merged format_by_width improvements from scanilic project
    * merged json encoding/decoding improvements from scanilic project

15/10/2017 1.6.2.11

    user visible changes:
    * fixed a bug in IndexItemsTable.versions_report where the produced list was wraped in an extra, redundant list

9/10/2017 1.6.2.10
    programmer visible changes:
    * new class TableBase to be a common base for InstlItemsTable, SVNTable
    * refactored many db queries to use TableBase.select_and_fetchall

    user visible changes:
    * fixed s3/CF incompatibilities when reading local info_map files

    admin vidible changes:
    * InstlAdmin.upload_to_s3_aws_for_revision few fixes: read instl/full_info_map.txt instead of instl/info_map.txt, changed how redundant files and folders are removed before uploading - now removing all unrequired files and then removing empty folders
    * InstlMisc.do_remove_empty_folders if REMOVE_EMPTY_FOLDERS_IGNORE_FILES is not found default to empty list
    * new method SVNTree.get_unrequired_file_paths

8/10/2017 1.6.2.9
    user visible changes:
    * fixed: .wtar items were not marked with wtarFlag in SVNTable

6/10/2017 1.6.2.8
    admin vidible changes:
    * added better progress messages around "depends" in InstlAdmin.create_links_for_revision
    * reduced InstlAdmin.do_depend time from 80 to 26 seconds by reducing complexity of InstlInstanceBase.needs & needed_by

    programmer visible changes:
    * reorder fields in SVNRow
    * reimplemented SVNTable.read_from_text, SVNTable.initialize_from_folder using sqlite.executemany
    * new function utils.iter_complete_to_longest to help with implementing SVNTable.read_from_text, SVNTable.initialize_from_folder
    * removed some redundant SVNRow methods
    * new option 'in+' to define --in command line option with one or more values
    * read-info-map command uses the new 'in+' to accept multiple input files
    * SVNTable.read_from_svn_info refactored to use plain sql instead of sqlalchemy
    * SVNTable.set_base_revision refactored to use plain sql instead of sqlalchemy
    * SVNTable.read_file_sizes refactored to use plain sql instead of sqlalchemy
    * SVNTable.read_props refactored to use plain sqlite instead of sqlalchemy
    * removed redundant methods InstlClientCopy.get_max_repo_rev_for_source, read_file_sizes_original, set_infomap_file_names
    * no need to ResolveStrToStr on svnitem.download_path because it's inserted already resolved
    * SVNTable.get_exec_items renamed get_exec_file_paths and refactored with splain sqlite instead of sqlalchemy
    * new method SVNItem.select_and_fetchall does common part of calling sqlite for getting a single value

2/10/2017 1.6.2.7
    user visible changes:
    * improved instl_invocations.txt: location is in Logs folder is exists, otherwise in user folder,
        batch files created by instl also write to this file, exit code report

1/10/2017 1.6.2.6

    programmer visible changes:
    * new field IndexItemRow.direct_sync will help for faster calculation of sync folders
    * new method IndexItemTable.mark_direct_sync_items will set IndexItemRow.direct_sync - not finished!
    * in InstlClient.set_sync_locations_for_active_items removed var_stack.ResolveStrToStr(source) because all sources are already resolved
    * fixed and issue with exec command that did not initialize items_table
    * removed sme redundant code from YamlReader.read_yaml_file
    * new command read-info-map to test read and info man file
    * new method SVNTable.info_map_table.create_indexes() to create the indices after read
    * removed SVNRow.dirFlag so fileFlag index will be more effective for both file and dir searches
    * refactored SVNRow.get_unrequired_paths_where_parent_required from sqlalchemy to sql - needs testing!

28/7/2017 1.6.2.5

    programmer visible changes:
    * new method InstlClient.name_for_iid to get either the name or if missing the iid. Used for progress messages in remove instead of name_and_version_for_iid where the version from index is not relevant.
    * replaced batch_accum.begin_transaction()/commit_transaction() with BatchAccumulatorTransaction in InstlClientCopy.create_copy_instructions_for_no_copy_folder and InstlClientSync.do_sync
    * some variable names for BatchAccumulatorTransaction changed to reflect they are transaction not the actual accumulator
    * create_remove_unwanted_files_in_sync_folder_instructions renamed create_instructions_to_remove_redundant_files_in_sync_folder and refactored to work with SVNTable.get_files_that_should_be_removed_from_sync_folder instead of count_file_by_path_case_insensitive. Result 19% shorter synccopy prepare instructions stage.
    * SVNTable.get_files_that_should_be_removed_from_sync_folder replaces count_file_by_path_case_insensitive, implemented as one sql script for all files instead of accessing the db one by one.

27/9/2017 1.6.2.4

    programmer visible changes:
    * new BatchAccumulatorTransaction - a context manager class for batch accumulator transactions
    * BatchAccumulator.end_transaction renamed commit_transaction
    * new method BatchAccumulator.commit_transaction_if will call either commit_transaction or cancel_transaction according to parameter
    * new class method YamlReader.convert_standard_tags will remove null values from yaml according to tags "tag:yaml.org,2002:null", "tag:yaml.org,2002:python/none", this will prevent '~' from being assigned as value when read form yaml


26/9/2017 1.6.2.3

    programmer visible changes:
    * added ondelete="CASCADE" to IndexItemDetailRow.original_iid, IndexItemDetailRow.owner_iid
    * IndexItemTable.create_default_index_items, IndexItemTable.create_default_require_items refactored as sqlite script instead of sqlalchemy code
    * new function utils.quoteme_double_list_for_sql to help prepare IN arguments for sql queries

26/9/2017 1.6.2.2

    programmer visible changes:
    * DB view report_versions_view: gave name to min(remote.generation) SELECT field
    * new DB view versions_view just a list of IIDs and their versions
    * refactored InstlItemTable.set_name_and_version_for_active_iids to SELECT from report_versions_view
    * new function InstlClient.name_and_version_for_iid reads name_andVersion from DB but returns IID id not value was found
    * added ondelete="CASCADE" to IndexItemDetailRow.original_iid, IndexItemDetailRow.owner_iid
    * IndexItemTable.create_default_index_items, IndexItemTable.create_default_require_items refactored as sqlite script instead of sqlalchemy code
    * new function utils.quoteme_double_list_for_sql to help prepare IN arguments for sql queries

25/9/2017 1.6.2.1

    programmer visible changes:
    * methods IndexItemsTable.bake_baked_queries, SVNTable.bake_baked_queries were not used and removed
    * new method IndexItemsTable.__del__ will make sure all tables are unlocked before quiting
    * new methods InstlInstanceBase.__del__, InstlInstanceBase.del_items_table will make sure all IndexItemsTable.__del__ is called
    * renamed methods in IndexItemsTable: begin_get_for_all_oses -> activate_all_oses, reset_get_for_all_oses -> reset_active_oses, begin_get_for_specific_oses -> activate_specific_oses
    * removed method IndexItemsTable.end_get_for_specific_os
    * IndexItemsTable.resolve_item_inheritance error message instead of crash - if iid to inherit does not exist
    * new method IndexItemsTable.get_missing_iids_from_details for checking validity of 'inherit' and 'depends' fields in iids
    * InstlAdmin.verify_index_to_repo changed to use IndexItemsTable.get_missing_iids_from_details
    * removed method .IndexItemTable.name_and_version_report_for_active_iids and replaced with set_name_and_version_for_active_iids which writes the name and version to the db
    * therefor no more need for NameAndVersionFromQueryResults and InstlClient..iid_to_name_and_version
    * InstlCopy.create_copy_instructions_for_target_folder & InstlClientRemove.create_remove_instructions: replaced some usage of the old installItem config variables (iid_action_list_pre_copy_item,...) with db query
    * IndexItemTable.get_all_installed_iids converted from sqlalchemy to to plain sql
    * IndexItemTable.get_all_installed_iids_needing_update, get_all_iids, iids_from_guids streamlined
    * removed redundant IndexItemTable methods: get_item_by_resolve_status, get_items_by_resolve_status

24/9/2017 1.6.2.0

    programmer visible changes:
    * removed usage of install_definitions_index from instlInstanceBase_interactive.py
    * removed file installItem.py and all it's usage - finally only db operations are done
    * removed usage of InstallItem.push_var_stack_scope & InstlAdmin.sources_from_iids from all admin commands, effect mainly InstlAdmin.verify_index_to_repo
    * new method IndexItemsTable.change_status_of_all_iids to globally set all item status
    * removed unused file InstallItemLists.py
    * removed unused file test_InstallItems.py
    * InstlAdmin.do_depend replaced self.install_definitions_index with self.items_table.get_all_iids()
    * removed some redundant imports and functions
    * IndexItemTable.get_all_iids will return iids sorted
    * new method: IndexItemTable.iid_to_yaml intended to replace replace InstallItem.repr_for_yaml (not done yet)
    * removed "if self.items_table" from a few places as self.items_table is always initialized now
    * InstlInstanceBase.needs implemented with items_table instead of install_definitions_index
    * CMDObj.emptyline override to avoid a bug in PyCharm
    * new method: ConfigVarStack.repr_var_for_yaml represents 1 config var for yaml
    * ConfigVarStack.repr_for_yaml refactored to use ConfigVarStack.repr_var_for_yaml
    * Fixed IndexItemsTable.get_original_details
    * Fixed IndexItemsTable.repr_item_for_yaml and removed IndexItemsTable.iid_to_yaml which didi the same thing
    * InstlClient.repr_for_yaml rewritten with IndexItemsTable.repr_item_for_yaml
    * new method: IndexItemsTable.get_detail_values_by_name_for_all_iids, get values of specific detail for all iids
    * new method: IndexItemsTable.get_iids_with_specific_detail_values, get all iids that have detail_name with specific detail_value
    * refactored CMDObj.do_apropos to use only items_table not install_definitions_index
    * removed CMDObj methods do_listindex, do_common as they did almost the same as do_list, do_depend
    * import traceback properly
    * r in shortcut to restart in interactive mode
    * do_stam a function to try out things in interactive mode
    * removed table IndexGuidToItemTranslate replaced with TEMP table guid_to_iid_temp_t
    * IndexItemTable.iids_from_guids refactored using guid_to_iid_temp_t
    * added IndexItemsTable.lock_table and unlock_table. Locking a table is helpful when debugging to know when a table is being written.
    * as result of installItem.py removal also removed functions InstlClient.add_default_items. InstalInstanceBase.resolve_index_inheritance and other related code

18/9/2017 1.6.1.0
    user visible changes:
    * new config var INFO_MAP_FILES_URL_PREFIX to better define INFO_MAP_FILE_URL
    * some more progress message during copy snd sync batch file creation
    * utils.read_file_or_url does some caching if given url, local file and checksum
    * utils.read_file_or_url default timeout is now 18.05sec for connection, 120.05dec for the whole download
    * files to download are sorted by size so smaller files will download first and show progress earlier
    * run_parallels: flush stdout after each process in the loop, maybe will give better progress reports

    admin visible changes:
    * info_map files split from the main info_map.txt will be added to the main info_map.txt so size and checksum are known
    * additional info_map files are read during InstlInstanceSync.read_remote_info_map
    * better config var definitions for admin
    * the full info_map.txt is now called full_info_map.txt
    * renewed interactive mode that was neglected where some features did not work, mainly do_depend

    programmer visible changes:
    * install_sources are now duplicated for Mac/Win and initial '/' is removed from common items
    * Removed the AdjustedSources table, it was no longer useful after install_sources is pre-inserted for Mac/Win/common   * YamlReader.read_yaml_file uses new function utils.read_file_or_url
    * SVNTable.read_from_file will not clear the database by calling clear_all() this will allow to read additional info_maps in InstlInstanceSync.read_remote_info_map
    * new function utils.read_file_or_url will gradually replace class open_for_read_file_or_url - opens urls using requests modules, for better compatibility with CloudFront
    * creation of sql views & triggers from a text file
    * intl.spec: add *.sql to defaults folder
    * all tables views and triggers now created with 'IF NOT EXISTS' so that in interactive mode we can init both client and admin classes
    * new func IndexItemsTable.get_unique_detail_values
    * reimplemented InstlAdmin.do_filter_infomap with new database tables and columns
    * optimization in utils.check_file_checksum prevent reading the file if file_path or expected_checksum is None
    * changed some import order so instl will run properly when compiled
    * replaced .format(...) with :arguments for many sqlite queries
    * get_info_from_plugin get the path,LicenseGUID,PluginExternalVersion,WaveShellsBaseName,DynamicPluginLibName plugin info as a dictionary
    * check_version_compatibility moved to be a free function instead of InstlInstanceBase member
    * db IndexItemDetailRow.active and IndexItemDetailOperatingSystem.active renamed os_is_active to avoid confusion as to what active means
    * removed some more usage of push_var_stack_scope in effort to some day get rid of it and use only db
    * InstlInstanceBase.init_items_table will make sure only one instance of items_table exists
    * InstlClient.accumulate_unique_actions was no longer used and removed
    * IndexItemTable.get_resolved_details_value renamed get_resolved_details_value_for_active_iid
    * IndexItemTable.get_resolved_details renamed get_resolved_details_for_active_iid
    * new method IndexItemTable.get_active_oses mainly for debugging
    * new method IndexItemTable.get_resolved_details_value_for_iid
    * IndexItemsTable.__init__ will commit changes after initializing the db
    * unified DownloadTool_mac_curl.create_config_files and DownloadTool_win_curl.create_config_files to DownloadToolBase.create_config_files
    * utils.read_file_or_url a little more timeout: timeout=(33.05, 180.05)
    * fixed IndexItemTable.read_item_details_from_node so Win32/Win64 items would be inserted properly

10/9/2017 1.6.0.0

    user visible changes:
    * sync will work with non signed urls and cloud front cookies
    * default timeout of 300 seconds (hardcoded) when instl internaly reads urls (not the synced urls which use CURL_MAX_TIME)

    admin visible changes:
    * support separate info_map.txt files for specific iid

27/8/2017 1.5.3.0

    admin visible changes:
    * do_up2s3: better variable names
    * upload_to_s3_aws_for_revision: prepared command to remove uploaded folders, currently only echoed not executed
    * wtar is created as .wtar.aa even if not big enough to be split
    * wtars are not created if there is an existing wtar and contents are identical, if they are created do_wtar will erase previous .wtar files
    * InstlAdmin.stage2svn_for_folder: wtars are not copied or added during stage2svn if there is an existing wtar and contents are identical.
    * above rule applies even when new file is .wtar.aa and old is .wtar
    * InstlAdmin.prepare_limit_list renamed prepare_list_of_dirs_to_work_on
    * new function misc_utils.get_wtar_total_checksum

23/8/2017 1.5.2.8

    user visible changes:
    * Fixed: "have_info_map.txt: No such file or directory" - while in chimera automated testing
    * InstlClientSync.do_sync will call create_no_sync_instructions in case no files needed syncing. This will make sure have_info_map.txt.txt is created even if everything is synced.

22/8/2017 1.5.2.7

    programmer visible changes:
    * check_binaries_versions_in_folder filtering is done with a function instead of directly with regexes

13/8/2017 1.5.2.6

    programmer visible changes:
    * config vars were being forzen before first resolve. T
        his prevented var ending with _DIR from being properly fixed to replace '/'s with '\' on windows

8/8/2017 1.5.2.5

    user visible changes:
    * Moved creation of "after-sync" create_sync_folder_manifest_command to be doen right after sync and before check-checksum
    * do_check_checksum: separate reporting for bad checksum and for missing files


7/8/2017 1.5.2.4

    user visible changes:
    * Disabled background launch for create_folder_manifest_command, it would cause confusion with DB creating when running instl uncompiled

    programmer visible changes:
    * Some fixes to set_sync_locations_for_active_items to allow for !dir, !dir_cont, !file in direct-sync mode
    * InstlMisc: from svnTree import SVNTable only when needed
    * New column in SVNRow: leaf will be the last element of the path - useful in set_sync_locations_for_active_items
    * New function: SVNTable.level_parent_and_leaf_from_path to calculate the leaf, parent and number of levels for SVNRow record


2/8/2017 1.5.2.3

    programmer visible changes:
    * aYaml.writeAsYaml now write '~' in case value is an empty list or empty string

    admin visible changes:
    * instlGui (admin): better handling of --limit values when reading/writing to/from history file and when and passing to sub process
    * instlGui (admin): Stave state button to force writing of the history file

30/7/2017 1.5.2.2

    programmer visible changes:
    * Added option to disable ssl verification when downloading URLs with open_for_read_file_or_url.
        Default set to not verify, just like with curl configuration. Should help with some clients
        that do not have proper ceritifates installed.

26/7/2017 1.5.2.1

    user visible changes:
    * changed messages created during create_download_instructions to include total num files and total sizes
    * added progress items for already synced items so progress bar will start form the middle
    programmer visible changes:
    * new function SVNTable.get_not_to_download_num_files_and_size: will report the number and total sizes of the files that are already synced in cache
    * SVNTable.get_not_to_download_num_files_and_size: when all files need downloading the num total bytes would be None instead of 0.
            because sqlite's SUM function returns None. Changed to using TOTAL which return 0 in such a case.

23/7/2017 1.5.2.0

    user visible changes:
    * report-versions, when checking a .bundle folder will first try to use the new Contents/Info.xml file before falling back to reading the Info.plist


29/6/2017 1.5.1.2

    user visible changes:
    * removed printing of PYTHONIOENCODING which would come our in inappropriate occasions

    programmer visible changes:
    * requirements file: added future>=0.16.0 and updated versions to latest
    * do_parallel_run fixed call to utf8_open


28/6/2017 1.5.1.1

    user visible changes:
    * improved printing PYTHONIOENCODING in case it's not utf8 or utf-8

22/6/2017 1.5.1.0

    user visible changes:
    * flush progress messages that are printed during instl run (not during batch file run),
        so they appear in correct timing in teh log
    * many changes to acomodate installing on chinese systems

    programmer visible changes:
    * fixed many inspection warnings
    * new function utils.utf8_open makes sure all files are opened with utf-8 encoding and errors='namereplace'
    * moved many file/folder/file system functions from midc_utils.py to new file files.py
    * sys.stdout is reopened as utf-8 since under Central is opens as ascii

11/6/2017 1.5.0.4

    user visible changes:
    * Added progress messages when preparing installer, currently only 4 dummy messages are produced

    programmer visible changes:
    * added 'import utils' in instlClientRemove.py where it was missing and caused uninstall not ot work

9/6/2017 1.5.0.3
    Some reformating to the change log file

    user visible changes:
    * Added Start sync, Start copy progress messages

    admin visible changes:
    * Changes to do_wtar to make the result idempotent

5/6/2017 1.5.0.2

    user visible changes:
    * names of files of command-list of unwtar are appended with a sequetial number to avoid these files stepping on each other
    * removed redundant Expand messages

5/6/2017 1.5.0.1

    user visible changes:
    * InstlClient.create_sync_folder_manifest_command now has option to run in back ground - Mac only
    * 'command-list': new option --parallel to run commands from list in parallel - Mac only
    * 'batch' command renamed 'command-list' as the word batch is confusing with the batch file produced by many commands
    * new option for do_something commands: --no-numbers-progress, will output "Progress ... of ...", useful for commands
        running in parallel

    admin visible changes:
    * log-analyzer.py - utility for analyzing instl logs - not finished yet

    programmer visible changes:
    * new function SVNTable.count_file_by_path_case_insensitive, replacing inefficient SVNTable.get_item_case_insensitive
    * in utils.unwtar_a_file moved checking of disk checksum only if total_checksum is present in pax_headers so unwtarring
        old archives that do not have pax_headers and/or total_checksum will be faster
    * commented out some redundant chmods during copy now that unwtar is done once per install folder
    * InvocationReporter wraps main() and reports argv and run time for instl invocation. Enabled if ~/instl_config.yaml is present
    * .get_default_out_file: function for deciding the output file, to be overriden by child classes (InstlClient, InstlMisc, ect...)

1/6/2017 1.5.0.0

    user visible changes:
    * new command: batch, will read instl commands form a file and execute them. Currently limited to do_something mode of commands.
    * new PAX wtars are not untarred if all files ar ein place and checksums in wtar file agree with disk checksums
    * faster copy preformance because of batch-ign of unwtar and checksum checkking

    admin visible changes:
    * new wtar format PAX and checksum is added to each file, and for all files, in the PAX_HEADER

    programmer visible changes:
    * utils.folder_listing renamed utils.disk_item_listing and moved to new file ls.py together with all ls helper functions.
        Added option to list a single file, report partial path instead of full path, and thorough documentation of the format options.
    * new function utils.get_recursive_checksums returns a dict with checksums for each file and a total checksum
    * do_wtar implemented based on utils.get_recursive_checksums
    * do_checksum implemented based on utils.get_recursive_checksums
    * utils.get_file_checksum now has follow_symlinks parameter and if False will checksum the contents of the symlink
        by calling readlink.
    * YamlReader: better tracking of __include__ files to provide accurate error messages
    * YamlReader.read_yaml_file: exceptions from recursive calls will appear only once
    * new default variable in InstlMisc.yaml: WTAR_IGNORE_FILES, those files which will be ignored when wtar/unwtar is called
    * platformHelper_XXX: new parameter preserve_dest_files to copy_dir_to_dir (before the default was not to preserve
        destination files
    * new function platformHelper_Base.tar_with_instl will do tar by calling instl command wtar
    * do_wtar_staging_folder uses new function tar_with_instl
    * utils.is_first_wtar_file now finds split files - no need to pass it a list
    * new property utils.open_for_read_file_or_url.actual_path, is the path/url after it has been resolved
    * utils.find_split_files is more independant and will return a list even when there is only one file
    * class CommandLineOptions and functions prepare_args_parser read_command_line_options moved to new file cmdOptions.py

18/5/2017 1.4.4.2

    user visible changes:
    * New variable CURRENT_DOIT_DESCRIPTION to allow meaningfull messages from doit actions
    programmer visible changes:
    * Reimplemented doit command using only database
    * IndexItemsTable.get_resolved_details_value results sorted by order they were inserted (IndexItemDetailRow._id)
    * New function SVNTable.get_item_case_insensitive implemented by Lev. Good for looking in the db for files that exist on disk.

    programmer visible changes:
    * Added , errors='namereplace' where ever text files are written. This will cause unicode characters that cannot be written
            (e.g. 'surrogates not allowed' error) to be replaced by their name (e.g. '\ud9fe')

30/4/2017 1.4.4.1

    * InstlDoIt.doit_for_item refactored to use db instead of install_definitions_index
    * Removed InstlDoIt.accumulate_unique_actions as it was not used
    * Fixed SearchPaths to use pathlib.Path to resolve paths, as some paths were not found when using the doit command

27/4/2017 1.4.4.0

    user visible changes:
    * Calculation and reporting of number of bytes to sync by device/drive
    * Fix an error in calculation of the number of bytes to copy
    * Refactored InstlClientCopy.create_copy_instructions_for_file/dir_cont/dir, to reduce the amount of instructions created
    * Added InstlInstanceSync_url.chown_for_synced_folders to set synced files to current owner instead of root
    * no sync instruction pre/post instructions are produced if there are not files to sync

    programmer visible changes:
    * Removed InstlClientCopy.create_copy_instructions_for_files as !files sources no longer supported
    * InstlClientCopy.ignore_list renamed InstlClientCopy.patterns_copy_should_ignore
    * IndexItemsTable.get_resolved_details_value reimplemented with SQl instead of sqlalchemy query
    * Optimized get_wfi_version to read only part of the file
    * set_sync_locations_for_active_items will set download_root files of SVNRow for direct sync items
    * New function PlatformSpecificHelperBase.chown implemented in PlatformSpecificHelperMac but not in PlatformSpecificHelperWin
    * New SVNRow columns wtarFlag, download_root and new function get_download_roots
    * BatchAccumulator transactions can now span over multiple sections
    * Fixed wrong path calculation in create_copy_instructions_for_file
    * All create_sync_instructions return the number of files/sources to be synced so the whole sycn section can be removed
        if there are not files to sync

19/4/2017 1.4.3.2

    user visible changes:
    * Added removing of previous sources when uninstalling
    * Added reading of InstlClient.yaml in InstlMisc.do_exec. This is a temp hack, which additional config file to read
        should come from command line options.

    programmer visible changes:
    * Move functions InstlClientCopy.create_remove_previous_sources_instructions_for_source,
        InstlClientCopy.create_remove_previous_sources_instructions_for_target_folder to InstlClient
        so they can be used byInstlClientRemove
    * InstlInstanceBase.read_require - calling self.items_table.read_require_node only if self.items_table was initialized

9/4/2017 1.4.3.1

    user visible changes admin:
    * fixed problem in gui mode with handing --limit options that has multiple patha that have spaces in them.

4/4/2017 1.4.3.0

    user visible changes admin:
    * new command: exec to execute any python code

    programmer visible changes:
    * merged some changes form optimize-db to repalce usage of IntallItem with database queries

26/3/2017 1.4.2.0
    user visible changes:
    * New config variable: REMOVE_PREVIOUS_SOURCES set to True be default, If set to False will prevent previous_sources
        from being deleted.
    * Merge branch 'wfi_lev': better checking of 2 types of wfi files
    * platform_helper.rmdir, platform_helper.rmfile got new parameter check_exist that will preform the deletion
        only if the file/folder exists. This is "for good measure" so we do not get redundant error messages during batch runs.

    programmer visible changes:
    * New function: ConfigVarList.ResolveVarToBool will resolve a variable from yes,no,true,false,y,n to True/False.
        Default value will be returned in case variable does not exist or cannot be converted to bool.
    * New function: utils.str_to_bool a helper fro implementing ConfigVarList.ResolveVarToBool

23/3/2017 1.4.1.0

    user visible changes:
    * New index property: previous_sources where you can specified the previous names of the install_sources.
        These names will be used for 1) identifying  old versions that need update 2) files/folders that will be
        removed when the main IID is installed

    programmer visible changes:
    * create_remove_previous_sources_instructions_for_target_folder takes care of removing previous_sources
    * InstlClient.no_copy_items_by_sync_folder renamed no_copy_iids_by_sync_folder, values are now pre-sorted
    * InstlClient.all_items_by_target_folder renamed all_iids_by_target_folder, values are now pre-sorted

22/3/2017 1.4.0.3

    user visible changes:
    * report-versions command: added option ('--only-installed') to show only installed products

    programmer visible changes:
    * read_item_details_from_node: changed to handle cases of illegal yaml with maps the have keys with same name

21/3/2017 1.4.0.2

    user visible changes:
    * Fixed: the version would be written in the guid field of the require.yaml instead of the guid

19/3/2017 1.4.0.1

    user visible changes admin:
    * SVNTable.read_file_sizes: admin 'trans' command stopped working because bulk_update_mappings would not find the updated rows.
        So rows are now updated one by one.
    user visible changes:
    * Fixed creation of paths for download on windows
    * added 'direct_sync' to allowed_item_keys to avoid warnings

18/3/2017 1.4.0.0

    user visible changes:
    * Added support for direct sync

    programmer visible changes:
    * InstlClient.get_binaries_versions renamed get_version_of_installed_binaries
    * Fixed regex that reads InfoMaps to correctly identify dl_path fields
    * Fixed SVNTable.mark_required_files_for_active_items to correctly indentify files and folders that were wtared

8/3/2017 1.3.3.5

    programmer visible changes:
    * Unique constraint on IndexItemDetailRow so to avoid duplicate rows
    * rearranged th triggers that create require../ details in table IndexItemDetailRow
    * repr_require_for_yaml avoids duplicate entries
    * info_map_table and items_table are now only initialized when needed
    * database can be configured to have a unique name in each run
    * database can be forced to be on disk even when instl runs compiled
    * new table ConfigVar that will be populated with config variables values

    user visible changes:
    * fixed issue where __ALL_ITEMS_IID__ & __ALL_GUIDS_IID__ would not be calculated correctly
    * new config var __DATABASE_URL__ to contain the url of the database

    user visible changes admin:
    * initialize self.items_table in InstlAdmin

6/3/2017 1.3.3.4
    user visible changes:
    * new IID detail value "phantom_version" for cases where require_version does not exist and cannot be deduced from disk.

2/3/2017 1.3.3.3

    programmer visible changes:
    * IndexItemRow.status renamed install_status
    * Constants for IndexItemsTable.install_status in IndexItemsTable.install_status
    * New column IndexItemRow.ignore - to ignore iids found in variables
        DO_NOT_REMOVE_TARGETS, MAIN_IGNORED_TARGETS
    * New function IndexItemsTable.set_ignore_iids to set IndexItemRow.ignore
    * New utils functions quoteme_single_list, quoteme_double_list will quote all strings in a list
    * Added DISTINCT to the SELECT statement in get_all_installed_iids_needing_update, not need for repeated items.
    * Changed implementation for begin_get_for_all_oses, begin_get_for_specific_oses to be sqlite code instead of sqlalchemy
    * Added much needed session.commit's to fix creation of offline installers
    * CREATE TRIGGER got IF NOT EXISTS
    * Some more session.commits
    * get_all_iids implemented in SQL instead of sqlalchemy baked query
    * all_uninstall_items is sorted

28/2/2017 1.3.3.2

    programmer visible changes:
    * moved around some varible intialization to accommodate for creating offline installers for Mac on windows

21/2/3017 1.3.3.1

    user visible changes:
    * Fixed issues with updating require_version and require_guid when two products have the same guid.

15/2/2017 1.3.3.0

    programmer visible changes:
    * Added '|' to characters that need escaping in dos branch files.
    * Version updated to 1.3.3.0 so we can set INSTL_MINIMAL_VERSION in index.yaml to 1.3.3 if '|' is in some var

15/2/2017 1.3.2.4

    user visible changes:
    * CHECK_BINARIES_VERSION_FILE_EXCLUDE_REGEX will effect which files not to consider when doing version report
    programmer visible changes:
    * utils.compile_regex_list_ORed verbose default changed to False, because spaces in regexs should be consider
    * Disabled usage of Mac_dylib in report-versions because otool is available only on systems where developer tools
        were installed, so usage of otool cannot be deployed to users

8/2/2017 1.3.2.3

    user visible changes:
    * fixed create_copy_instructions_for_file to correctly handle !file item that is wtar.
    * fixed report-versions where version is different between Mac and Windows

    programmer visible changes:
    * Fixed the reading of environment varaibles under "__environment__":
          - no more usage of regexs, just plain varaible names
          - variables are read in bulk not one by one
          - On windows seach for the variable is done case insensetive


31/1/2017 1.3.2.2

    user visible changes:
    * when writing variable to batch file, correctly write those with empty values.
    * fixed unwtar: the output location was not correctly read from commnadline variable.
    * fixed some crashes in gui mode
    * unwtarring is done directly from the cache folder to the target.
    programmer visible changes:
    * ResolveVarToStr fixed handling of default return value.


11/1/2017 1.3.2.1


    user visible changes:
    * default for HAVE_INFO_MAP_FOR_COPY is now $(NEW_HAVE_INFO_MAP_PATH), to allow creating copy batch file after creating
        sync batch file but before running the sync batch file

    programmer visible changes:
    * create_variables_assignment moved to inside write_batch_file, as they were always done one after another.
        This will allow for several variables to be written to the batch file which were not written before.


11/1/2017 1.3.2.0

    programmer visible changes:
     * new database view: report_versions_view - the summery of all require and version searches
     * added get_binaries_versions to InstlClient.do_command so data will be available to all client commands, e.g. copy and sync.

8/1/2017 1.3.1.0

    user visible changes:
    * report-versions works with extracting binary version when they are missing from require.yaml:
    * more human readable json output to report-versions, with indents and line breaks

    programmer visible changes:
    * replaced previous views with views to reflect those items that did not have guid or version in require.yaml
        and such guid/version was found in binaries
    * Mac_bundle, Mac_framework: look for CFBundleVersion not CFBundleGetInfoString
    * new function utils.safe_remove_folder
    * new row to table IndexItemDetailRow: active. Will be automaticaly set to 0/1 according to current OS

19/12/2016 1.3.0.13

    programmer visible changes:
    * MultiFileReader: new class to read parts of wtar files as if they were one

15/12/2016 1.3.0.12

    user visible changes:
    * report-versions command not reports items that have no guid or name.

8/12/2016 1.3.0.11

    programmer visible changes:
    * get_all_iids_with_guids text instead of sqlalchemy query
    * added try/except for many slqalchemy code
    * removed some commits that (hopefully) were redundant
    * Moved create_default_require_items & create_default_require_items to new function: create_default_items that
        will be called after index and require were read

23/11/2016 1.3.0.10

    programmer visible changes:
    * removed boto from the exclude list of pyinstaller, so compiled versions of instl can access S3 with the
        __CREDENTIALS__ variable

6/11/2016 1.3.0.9

    * Integrated from version-check branch. All dependencies and require calculations are done through database.

1/11/2016 1.3.0.8

    programmer visible changes:
    * more usage of sqlite in prepering lists of iids to install, and calculating required dependencies


1/11/2016 1.3.0.7

    user visible changes:
    * Add to report-versions command reporting of product name as it appears in index.yaml

???? 1.3.0.730/10/2016 1.3.0.6

    programmer visible changes:
    * fixed IndexItemsTable.read_require_node to handle empty !require sections
    * fixed reading of require files from include sections

    user visible changes:
    * fixed handling of __UPDATE_INSTALLED_ITEMS__ & __REPAIR_INSTALLED_ITEMS__ in InstallInstructionsState.__translate_root_items
    * fixed InstlClient.create_sync_folder_manifest_command, to try getting the output folder from params
        'ECHO_LOG_FILE', '__MAIN_INPUT_FILE__', '__MAIN_OUT_FILE__'
i

26/10/2016 1.3.0.5

    programmer visible changes:
    * fixed IndexItemTable.iids_from_guids for cases where not guids are supplied
    * fixed IndexItemTable.get_recursive_dependencies for cases where no main_install_targets are supplied
    * fixed IndexItemTable.create_default_require_items, IndexItemTable.create_default_index_items that where
        not producing the correct items
    * sqlalchemy: use a single session instead of separate ones for SVNTable and IndexTables,
        solves a problem when working with admin commands

25/10/2016 1.3.0.4

    user visible changes:
    * reading of require.yaml is done with __include_if_exists__ instead from code
    programmer visible changes:
    * new class IndexItemDetailOperatingSystem
    * removed classes IndexItemRequiredRow, IndexItemToDetailRelation
    * IndexItemsTable: many changes and improvements of database usage


16/10/2016 1.3.0.3

    user visible changes:
    * InstlClient.create_sync_folder_manifest_command looks for the folder where to put the manifest in
        __MAIN_INPUT_FILE__ instead of __MAIN_OUT_FILE__. This was done because in some situations __MAIN_OUT_FILE__
        is not defined yet.
    * new include: __include_if_exist__, so non existing files can be ignored
    * Default value for __OUTPUT_FORMAT__ is now OUTPUT_FORMAT so the format can be specified in !define sections
    * added option --out to report-versions command

    programmer visible changes:
    * new optional flag to read_yaml_file ignore_if_not_exist to implement __include_if_exist__
    * Added reading of index files to database together with previous reading method - as temporary transition method
    * remove db file when initializing new db in non-compiled mode
    * commit after reading index to prevent "locked db" when reading SVN map

19/9/2016 1.3.0.2


    user visible changes:
    * Fixed bug in the calculation of uninstall items
    * Added option to "explain" uninstall calculations
    * Fixed a bug in the creation of variable __MAIN_OUT_FILE__ in InstlInstanceBase.write_batch_file - it was done
        too late so the varaible was not printed to the batch file

18/9/2016 1.3.0.1

    user visible changes:
    * New defaults for curl parameters, and passing the --retry_delay option wchi was not passed before
    * Changed (a little the meaning of __UPDATE_INSTALLED_ITEMS__ & __REPAIR_INSTALLED_ITEMS__ to always copy
        all updated items (until we figure out how to consider versions)
    * report_versions command improved - but not operational yet

    programmer visible changes:
    * InstallItem variable iid_version defaults to if version was not given
    * RequireMan.RequireItem new sub class for RequireMan to better handle each item
    * RequireMan is iterable on it's items


13/9/2016 1.3.0.0

    user visible changes:
    * InstallItem new member: version, and item variable iid_version, default comes from
    * New commands 'report-installed', 'report-update' to report currently installed items and what's available to install

    programmer visible changes:
    * Improved configVar parsing and added array reference resolution: $(A[3])

15/8/2016 1.2.3.1
    user visible changes:
    * Some check for value of REPO_REV were redundant and failed commands such as remove.
    * chmod -R -f a+xwX after copy dir to dir on Mac. Should solve permission problems when installing on Mac
        from offline installer created on Windows.

    programmer visible changes:
    * Added packaging.requirements to hiddenimports in instl.spec to overcome compilation issue on Windows

9/8/2016 1.2.3.0

    user visible changes:
    * New command resolve, to resolve $() variables in arbitrary text
    * New variable, PRINT_COMMAND_TIME, to control if a command displays time information when it's done. Default set to yes.
    * New document tag for yamls: "!define_if_not_exist" will read the values only if they do not exists, implemented
        in ConfigVarYamlReader.read_defines_if_not_exist
    * resolve command accepts --config-file, --in, --out instead of read/write to stdin/stdout. SO it can change the file inplace
    * Progress messages added to doit

    programmer visible changes:
    * Functions bool_int_to_str, str_to_bool_int moved to utils
    * Some fixes to dockutils: modern language usage,
        stopped using the function path_as_string as it had encoding issues,
        replaced readPlistFromString with readPlistFromBytes even though readPlistFromBytes is deprecated.
    * file configVar.py renamed cnfigVarOne.py to avoid conflict with the module who's name is also configVar
    * configVarList.read_environment - new parameter 'regex' to filter the environment variables being read
    * InstlInstanceBase.read_include_node now accepts *args, **kwargs
    * InstlInstanceBase.write_batch_file now creates the directory for the batch file
    * New base class for reading yaml files: aYaml.YamlReader
    * New class ConfigVarYamlReader inherits from aYaml.YamlReader
    * New parser for variables resolution. Old function were renamed *_deprecated. New functions for resolving:
        ResolveVarToStr, ResolveVarToList, etc    * _DIR & _PATH variables are resolved as path instead of read as such.
        This will allow for better resolution becuase more information is known.
    * BatchAccumulator better handling of list of lines and single lines
    * New function: utils.is_iterable_but_not_str
    * Removed code to indent batch files - it was not working anyway.
    * sqlalchemy Update cannot accept more than 999 variables, so it is now called in chunks of 512

2/6/2016 1.2.2.0

    user visible changes:
    * Fixed the progress count when creating sync sub-folders
    * sync command batch file creates sync folder manifest before and after it does it's work
    * copy command batch file creates sync folder manifest before it does it's work
    * Allow multiple guids per IID
    * New options for Robocopy to reduce verbosity
    * PlatformSpecificHelperMac.unlock will print its output to /dev/null because we do not care for the error message
        if the items being unlocked do not exists
    * utils.folder_listing adds comments with date the manifest was created and the folder(s) being manifested
    * Fixed ls command to properly handle missing folder and report them in the output

    programmer visible changes:
    * removed readline and colorama from test_import - they are needed only for interactive mode and should not
        create an error on compilation.
    * New functions InstlClient.create_folder_manifest_command  InstlClient.create_sync_folder_manifest_command
    * Fixed InstlMisc to properly count progress and not display a message about "curr_progress != actual_progress" which was wrong
    * Fixed utils.max_widths to handle empty lists

3/1/2016 1.1.1.0

    user visible changes:
    * sync-folder-manifest.txt is created if ECHO_LOG_FILE is supplied and in the same folder.
    * Weird variable name __USRER_ID__ renamed __USER_ID__
    * Mac: add -m a+rwx to all mkdir commands, mkdir_with_owner is now 'mkdir -p -m a+rwx "$1"' & 'chown $(__USER_ID__): "$1"'
    * Win: robocopy /R:9 /W1 instead of /R:3 /W:3
    * Win: added GOTO EXIT_ON_ERROR if cd or mkdir failed
    * Added progress steps after cd and mkdir operations
    * Mac: New command: mac-dock to add, remove items to the dock and to restart the dock.

    admin visible changes::
    * Check that admin commands run only under Mac or Linux
    * Adjusted InstlAdmin.create_links_for_revision to work on Mac

    programmer visible changes:
    * Added dockutils from https://github.com/kcrawford/dockutil

28/12/2015 1.1.0.2

    user visible changes:
    * Mac: Separated changing of permission from rsync, because it prevented rsync
        from created hardlinks.
    * Removed ".svn" from COPY_IGNORE_PATTERNS, it's no longer relevant.

20/12/2015 1.1.0.1

    user visible changes:
    * Windows: Some cmd tools are located if they are not in one of the PATH folders.
        The list of such tools is in "CMD_TOOLS_TO_FIND" & "CMD_TOOLS_TO_FIND_INTERNAL" variabless.

31/11/2015 1.1.0.0

    user visible changes:
    * new doit command for fast and easy actions that do not require sync/copy

26/11/2015 1.0.1.5

    user visible changes:
    * Added sorting to some lists that use to create the install instaructions.
        This will make the produced batch files more consitant from run to run and enable comparing before/after changes

17/11/2015 1.0.1.4

    user visible changes:
    * --out option is now optional and defaults to "$(__MAIN_INPUT_FILE__)-$(__MAIN_COMMAND__).$(BATCH_EXT)"
        if not explicitly supplied
    * Number of curl configuration files is calculated to reach the max possible even if
        number of files to download is smaller than the max config files allowed
    * removed rsa and boto from the modules tested in test-imports

    user visible changes: & admin:
    * new command line option -define, allows to add variable definitions from the command line.
    * __CREDENTIALS__ is now resolved in connection_factory to allow it to include references to other variables

    programmer visible changes:
    * new functions unique_list.sort, unique_list.empty

4/11/2015 1.0.1.3

    admin visible changes::
    * add "--base-repo-rev" trans command that was missing in previous commits.

3/11/2015 1.0.1.2

    admin visible changes::
    * New command create-infomap, to create info_map.txt from a repository.
    * create-links command re-implemened new create-infomap command.
    * Indexes for Mac or Windows only are no longer created by create-links, they were never used.

    programmer visible changes:
    * try/except and better error report around reading yamls and info_map files

28/10/2015 1.0.1.1

    user visible changes::
    * unwtarring is done specifically to each .wtar file. No more unwtarring whole folders.

    programmer visible changes:
    * ConfigVarStack.add_const_config_variable: added normalization of paths for windows.
    * SVNItem.walk_items_with_filter renamed SVNItem.walk_file_items_with_filter - now it only yields file items.
        It was not clear if the dirs were supposed to be filtered when looking for files and dirs.

26/10/2015 1.0.1.0

    user visible changes::
    * Improved unwtar, no more done files, more robust algorithm, better catching and reporting of errors
    * Interactive mode: better help for depend

23/10/2015 1.0.0.9

    admin visible changes::
    * New interactive command: 'apropos' searches for index items, guids and params.
    * New interactive command: 'common' lists all common needs/needed-by index items for a given list of items.

22/10/2015 1.0.0.8

    user visible changes::
    * Print all running processes when batch file exits on non zero

    programmer visible changes:
    * normpath for the following variables to avoid bad slashes on windows"__SITE_DATA_DIR__, __SITE_CONFIG_DIR__,
        __USER_DATA_DIR__, __USER_CONFIG_DIR__, __USER_HOME_DIR__

20/10/2015 1.0.0.7
    user visible changes::
    * Fixed const variables ending with ("_PATH", "_DIR", "_DIR_NAME", "_FILE_NAME", "_PATH__", "_DIR__",
        "_DIR_NAME__", "_FILE_NAME__") were not normalized (Win)


19/10/2015 1.0.0.6

    user visible changes::
    * Added check after mkdir and cd on Windows
    * Check checksum for already synced files, to overcome possible file corruption.
    * Added messages for already synced files that need sync or unsynced file that do not need sync
    * Exit batch file if uwtar failed

    programmer visible changes:
    * Fixed missing import in instlAdmin.py
    * PlatformSpecificHelperWin.exit_if_any_error will exit on any zero exit code

18/10/2015 1.0.0.5

    user visible changes::
    * Finding cookie for url by domain is now case insensitive

14/10/2015 1.0.0.4

 user visible changes::
 * Support for cookies per domain with variable COOKIE_JAR
 * Better error for exception from join_split_files

12/10/2015 1.0.0.3

    user visible changes::
    * Moved the folder creation during copy to after the pre_copy step so that uninstalls from pre_copy will not erase
        important folders.

12/10/2015 1.0.0.2

    admin visible changes::
    * Added Mac unlocking (chflags -R nouchg) to fix-perm command, after imports from Windows machine brought locked files.

8/10/2015 1.0.0.1

    programmer visible changes:
    * Added initialization of USER_CACHE_DIR to init_copy_vars and init_sync_vars

6/10/2015 1.0.0.0

    admin visible changes::
    * New option --all-revisions to commands create-links and up2s3

1/10/2015 0.12.0.2

    admin visible changes::
    * Fixed missing import stat


1/10/2015 0.12.0.1

    user visible changes::
    * Fixed file-size related str/int confusion

    programmer visible changes:
    * Removed calculation of get_disk_free_space which are now done elsewhere.

1/10/2015 0.12.0.0

    user visible changes::
    * Added help for test-import command.
    * Added new packages (utils, svnTree, configVar) to test-import.

    programmer visible changes:
    * Integrated support for checking file sizes from file-sizes branch.

21/9/2015 0.11.0.5

    user visible changes::
    * Better default definition of LOCAL_SYNC_DIR based on USER_CACHE_DIR.

    programmer visible changes:
    * Solved an issue with __include__ tha does copy without checksum

20/9/2015 0.11.0.4

    user visible changes::
    * When reading __include__ statements, if a file does not have a checksum specification it will not be cached.

    programmer visible changes:
    * New function InstlInstanceBase.read_yaml_from_stream will read yaml from StringIO rather than directly from buffer.
    * Better remarks for read_from_file_or_url & download_from_file_or_url.

17/9/2015 0.11.0.3

    user visible changes::
    * fix to join_split_files when workong on local dir

16/9/2015 0.11.0.2

    user visible changes::
    * Minor changes to handle relative paths for certine _DIR variables
    * mkdir SITE_REPO_BOOKKEEPING_DIR before copying the have_info_map file.
    * New const variable: __CURR_WORKING_DIR__, the working directory when instl was launched.

9/9/2015 0.11.0.1

    user visible changes::
    * Fixed error when trying to remove items that were not installed. could happen because install dependencies
        are not always the same as remove dependencies

9/9/2015 0.11.0.0

    admin visible changes::
    * New command verify-repo checks local files against index.
    * Added verify-repo to gui mode.
    * Gui mode: the run checkbox is disabled for commands that do not accept --run.
    * New command fix-perm will attempt to fix permissions on stage folder before wtar and stage2svn.
    * Added help for fix-perm command.
    * wtar command now accepts the --limit option.
    * wtar command removes .DS_Store files before doing the actual wtarring.
    * FOLDER_EXCLUDE_REGEX now filters out folder called .svn.
    * FILE_EXCLUDE_REGEX now filters out folders called .DS_Store.
    * New command file-sizes scans a folder and outputs a list of all files and their sizes.
    * Added file-sizes option to the trans command so the sizes of files will be added to the final info_map.txt.

    programmer visible changes:
    * Extended the number of variable name endings that, when read, call os.path.normpath on the value:  "_PATH", "_DIR",
        "_DIR_NAME", "_FILE_NAME", "_PATH__", "_DIR__", "_DIR_NAME__", "_FILE_NAME__".
    * Added  validate=False to some boto function calls to better handle certificate problems.
    * Added empty certificate to opening a URL in function open_for_read_file_or_url to better handle certificate problems.
    * When reading the local instl_config file, reading of internal variables is now allowed, to allow for simulating
        various situations.
    * Removed some time measuring code where it was not needed. In some places replaced time.time() with time.clock()
        which is (supposedly) more accurate on Windows.
    * Added boto to the list of maodules in import-check and in pyinstaller compilation.
    * In function InstlAdmin.should_wtar, regex self.already_wtarred_regex was change to search instead of match.
    * New function InstlAdmin.compile_exclude_regexi to consolidate the reading of FOLDER_EXCLUDE_REGEX & FILE_EXCLUDE_REGEX
        in one place.
    * New propery SVNItem.size, implemented with member __size.
    * New function SVNItem.safe_size will return the recursive size of an item or -1 if not available.
    * New function utils.get_disk_free_space
    * New function InstlInstanceBase.calc_user_cache_dir_var calculates new variable USER_CACHE_DIR.
        This variable is not the base for LOCAL_SYNC_DIR (if LOCAL_SYNC_DIR is not explicitly supplied).

    user visible changes::
    * New interactive command 'which': prints the path to currently running instl
    * During copy, on Mac OS, rsync will set permissions according to variable RSYNC_PERM_OPTIONS.
        Default value is --perms --chmod=a+rw,+X.
    * Var assignments and remarks for DOS batch files will escape the '&' character.
    * Sync command will report the number of bytes to be downloaded.
    * Added message if sync folder is not big enough
    * When preparing offline installers avoid writing anything outside the designated LOCAL_SYNC_DIR.
    * Disabled error when trying to remove non existant paths

31/5/2015 0.10.0.6

    programmer visible changes:
    * Replaced default value path_so_far=list() with path_so_far=None
    * fixed wrong parameter name on CopyTool_win_xcopy.copy_dir_files_to_dir
    * Moved the curl config folder to be created in the bookkeeping folder so curls files for two version
        will not step on each other.
    * Better ConnectionHTTP.translate_url acts only on the path part.
    * DownloadToolBase.add_download_url in InstlInstanceSync_url.create_download_instructions_for_item: translate_url applied
        only to URLs created by instl.
    * Reading of info map file checks only checksum not sig.
    * Case insensitive checksum checks.
    * Checks with multi regexes are combined with new function compile_regex_list_ORed, used in conjuction with followingparams:
        FOLDER_WTAR_REGEX, FILE_WTAR_REGEX, FOLDER_EXCLUDE_REGEX, FILE_EXCLUDE_REGEX.
    * Fixed some errors discovered by Landscape.io
    * New function PlatformSpecificHelperBase.unwtar_something for unwtarring a specific item not just the current directory.
        PlatformSpecificHelperBase.unwtar_current_folder is now implemented by calling PlatformSpecificHelperBase.unwtar_something(".")

    user visible changes::
    * check-checksum command was defined by mistake to require --out command line option. Now removed.
    * A hack to prevent unwtaring of the sync folder. Copy command might copy something to the top level of the sync folder.
        So sync folder is avoided by detecting the bookkeeping folder inside.
    * If LOCAL_SYNC_DIR is not known it is extracted from SYNC_BASE_URL only if SYNC_BASE_URL exists.
        Previously if SYNC_BASE_URL was not found an exception was raised. Help to create remove without needing URLs.
    * Fixed the unwtar for non-copied object so that only what's needed will be unwtarred, not the whole sync folder.

    admin visible changes::
    * depend command: added a message at the end so we know output was created OK.
    * stage2svn command: added check to prevent adding files or folder with character ','.
    * Improved the unwtar command. Added --in option to allow to specify a file or folder that is not the current directory.
    * Fixed the verify-index command to proparly handle Win/Mac/Common sources and to identify wtarred sources.
    * Added --credentials to verify-index to allow access to secure s3.

15/3/2015 0.10.0.4
    user visible changes::
    * Better, more meaningful progress messages.
    * GUIDs that have upper case characters are converted to lower case.
    * HAVE_INFO_MAP_PATH file is copied to the SITE_HAVE_INFO_MAP_PATH for possible usage by remove command.
    * SITE SITE_HAVE_INFO_MAP_PATH is used by remove if HAVE_INFO_MAP_PATH was not found. This was done because when
        removing installation that was done from offline folder, Central will not pass LOCAL_REPO_SYNC_DIR to instl.
        HAVE_INFO_MAP_PATH depends on LOCAL_REPO_SYNC_DIR.
    * New variable HAVE_INFO_MAP_FILE_NAME, used by HAVE_INFO_MAP_PATH, NEW_HAVE_INFO_MAP_PATH, SITE_HAVE_INFO_MAP_PATH.
    * Added time measurements to create urls
    * Sync command: When no files to sync created batch file will have one progress item: "Done Sync".
    * Sync command: When no dirs to create no prgress items will be created.
    * Sync using info_map with prepared URLs.
        if variable FILES_AND_URLS_INFO_MAP_URL is available this file will be read instead of the one in INFO_MAP_FILE_URL.
    admin visible changes::
    * Admin variable MAX_FILE_SIZE renamed MIN_FILE_SIZE_TO_WTAR.
    * New admin variable: WTAR_BY_FILE_SIZE_EXCLUDE_REGEX. Files names passing this regex will not be wtarred.
        This was done mainly to disable wtarring of instl itself when updating it.
    * Variable WTAR_REGEX split in to twp: FOLDER_WTAR_REGEX, FILE_WTAR_REGEX to allow separation between files and folders
        when choosing what to wtar.
    * repo rev file has new variable INDEX_URL_RELATIVE_PATH, for the convenience of the secure URL creating code.
    * improved the help for unwtar command
    * New command read-yaml, just reads a yaml file, can be used to check file's syntax and structure. (admin)
    * gui mode: added Hover messages to few widgets.
    * gui mode: added check buttons that invoke read-yaml command on files who's path is in the gui.
    * Dependencies graph is now created with iids instead of names.
    * Interactive mode read command: added resolve_index_inheritance so proper dependencies can be shown.
    * Interactive mode depend command: removed duplicate items from report.
    * New admin command: depend. Output the full list of dependencies for an index.
    * depend command: added --out option, add help topic.
    * added depend command to gui/admin tab.
    * added --limit option to wtar command so it can work on specific folders.
    * fix-symlinks command will work even if there are broken symlinks. THere might point to inside folders that were wtared.
    * trans command: new parameter --base-url. If supplied will add url to all SVNItems representing a file.

    programmer visible changes:
    * Separated instlClient to different files by command: insltClientCopy, instlClientRemove, instlClientSync, instlClientUninstall.
    * Renamed translate_url to translate_url_parser in commandline options parsing.
    * Rearranged the command parsing code to be more efficient and easier to add new commands or change existing commands options.
    * Move few functions to instlInstanceBase to make them available to the new depend command.
    * gui mode: build command line from template.
    * SVNItem new property: __url

15/2/2015 0.10.0.2
    admin visible changes::
    * removed --acl when uploading to S3.

    programmer visible changes:
    * Re-added missing line in upload code

15/2/2015 0.10.0.0
    user visible changes::
    * Support for S3 secure downloads.
    * New command translate_url for testing the creation of secure s3 urls.

    programmer visible changes:
    * Global variable var_stack is now imported as itself rather as var_list to avoid cross import problems.
    * ConnectionBase class and derived classes ConnectionHTTP and ConnectionS3 handle secure connection issues.

28/1/2015 0.9.19.4
    user visible changes::
    * When writing echo's to log the log file is created in the begin sections and permissions are set to 666 so later
        launches of instl can append to log.
    * For many files that are created during instl run permissions are set to 666.
    * Moved  the curl config file to a local directory instead of being in the bookkeeping directory.
    * Fixed echo function on Mac - it was missing quotes.
    * New default __USER_CONFIG_FILE_PATH__: $(__USER_HOME_DIR__)/$(__USER_CONFIG_FILE_NAME__)
    * Added bash function resolve_symlinks (Mac only).
    * Moved resolving symlink files to the target folder.
    * In gui mode send window to front (Mac only).
    * Fixed removing of split wtar files (...wtar.aa, ...).
    * During create_copy_instructions, read NEW_HAVE_INFO_MAP_PATH and not HAVE_INFO_MAP_PATH.
        Copy might be called after the sync batch file was created but before it was executed.
        HAVE_INFO_MAP_PATH is only created when the sync batch file is executed.

    programmer visible changes:
    * BatchAccumulator new sections: begin happens after pre & assign and before links
    * ConfigVarList.__resolve_stack is now a class member.
    * ConfigVarList.resolve, when joining values will not join None values.

    admin visible changes::
    * When taring bzip2 is used instead of zip (--use-compress-program bzip2 instead of -z). Using zip
        created a different tar file every time something was re-tarred. This caused redundant uploads
        SVN and S3 of files that were not really different.
    * In GUI mode /Admin added indication to SVN repo and S3 bucket.
    * Fixed misleading messages in up-repo-rev
    * For GUI mode: reset SearchPath before loading admin config file, so that __include__'s will not be found in old search paths.
    * For GUI mode: SVN URL will be displayed with REPO_REV

4/12/2014 0.9.19.2

    user visible changes::
    * In gui mode: fixed saving state on Quit which failed to work after removing the Quit button.
    * copy_dir_files_to_dir with rsync fixed to really copy only files.

    admin visible changes::
    * New variable __INSTL_LAUNCH_COMMAND__ based on new function get_instl_launch_command.
        Will enable running instl from batch file if instl was compiled and if it was not.
    * New variable __USER_DESKTOP_DIR__

    programmer visible changes:
    * Added a flag to ConfigVarList.resolve to allow raising an exception if string was not fully resolved.
        This is useful when dealing with the file system (read file, make dir, ...) and will prevent,
        for example, creations of folders named "$(COMPANY_NAME)".
    * Shorten some variable names,

    gui mode changes:
    * Client input file is now a combo box that lets you choose files from the folder of the current choses input file.

30/11/2014 0.9.19.0

    user visible changes::
    * New command gui client mode.
    * disabled gui command when instl is compiled, since PyInstaller cannot find the frameworks required by Tkinter.
    * added Edit button besides all file fields in gui mode
    * implemented uninstall command by filtering the !require file and creating remove instaructions.

    admin visible changes::
    * Implemented --limit option to svn2stage
    * Added quoted string handling to --limit options of svn2stage and stage2svn
    * Mac OS mkdir_with_owner batch file function now sets only user id for new directory not group id.

    programmer visible changes:
    * New util function unquoteme sister to quoteme_single & quoteme_double
    * Added --run to some admin commands
    * Fixed Admin commands create_links and svn2stage to remove target files that are not in source using the new
        preserve_dest_files flag.
    * In gui mode /Admin section, enabled to have more than one limit paths.
    * Admin commands report revisions already created or uploaded as sequence not a long list.
    * In gui mode added access to the stage folder index file.

    programmer visible changes:
    * New methods: ConfigVarList.unresolved_var &  ConfigVarList.unresolved_var_to_list.
    * ConfigVarStack.repr_for_yaml new parameter resolve, so we can write var list to yaml without resolving. Default is resolve=True.
    * copy_dir_contents_to_dir has new option preserve_dest_files=True.
        If explicitly set to False copy_dir_contents_to_dir will try to remove target files that are not in source.
        Does not work for xcopy tool on Windows.
    * writeAsYaml will no write None values as '~' and empty strings as '""'
    * implemented requirement_of field in InstallItem
    * iids_from_guid check if input is guid and return the original iid if not.
        This will save checking by claaer of iids_from_guid.

5/11/2014 0.9.18.6

    user visible changes::
    * New optional variable INSTL_MINIMAL_VERSION will be compared to current instl version,
        raise exception if INSTL_MINIMAL_VERSION > __INSTL_VERSION__. Can be used to check
        compatibility between input file and instl reading it.
    * Improved removal of !dir_cont and !files sources.

4/11/2014 0.9.18.4

    user visible changes::
    * Enabled the removal of !dir_cont and !files sources.
    * Reading a user config file if such file exists. User config file named
        instl_config.yaml can be placed in the home folder,
        format is regular instl !define format.
        File name is in variable __USER_CONFIG_FILE_NAME__.
    * Better error message when public key cannot be determined.

    programmer visible changes:
    * Fixed the regex to find wtar versions of files to handle spaces in file names.

2/11/2014 0.9.18.1

    * It's possible now to install sources from any folder regardless of OS. This mainly enables the uses
        of Common folder in the same level of Win and Mac.

    user visible changes::
    * Moved the curl files to $(LOCAL_REPO_BOOKKEEPING_DIR)/curl instead of $(LOCAL_REPO_SYNC_DIR)/curl
    * LOCAL_REPO_SOURCES_DIR varaible is no longer used, use $(LOCAL_REPO_SYNC_DIR) instead.
    * new internal variable: __USER_HOME_DIR__ will point to the local home folder of the user.

    admin visible changes::
    * Install sources starting with '/' are absolute.
    * Install sources starting with '$(' are explicitly relative to that prefix variable.
    * Other install source remain relative to $(SOURCE_PREFIX).

30/10/2014 0.9.17.1

    user visible changes::
    * Better messages when exception is raised in case a file/folder is specified as source
        but does not exist in repository.

    admin visible changes::
    * Fixed a "lacuna" where fiels or folders that were wtared could not be downloaded as
        a stand alone item, only their parent folder could be. Now they can.
    * If a file/folder is missing for the map look for .wtar files with the same name and download them instead.

    programmer visible changes:
    * New method: SVNItem.walk_items_with_filter.
    * New method: InstlInstanceSync_url.mark_wtar_items_for_source
    * InstallItem.get_var_list adds a variable named "iid_iid" which is the actual iid.
        prevously only the name field was added as iid_name, but many items do not have a name field.
    * InstallItem variable iid_inherite renamed iid_inherit
    * Fixed some typos
    * InstallItem.read_from_yaml check key names and raises KeyError for illegal keys
    * InstlClient.add_deafult_items renamed add_default_items
    * InstlInstanceSync_url.mark_required_items_for_source: better messages in case a source is missing from map
    * New method SVNItem.walk_items_with_filter to be able to walk only items that pass a condition

29/9/2014 0.9.16.2   Shai Shasag <shai@waves.com>

    programmer visible changes:
    * Fixed a bug in rmfile implementation

28/9/2014 0.9.16.1   Shai Shasag <shai@waves.com>

    programmer visible changes:
    * ran "inspect code..." fixed a (few) issues.
    * more refined yaml reading options: url with/without sig and checksum. with multuple copy destinations.
    * removed redundant functions get_machine_config_file_path, get_user_config_file_path
    * Split new function read_from_file_or_url from download_from_file_or_url
    * new initial vars: "__SITE_DATA_DIR__": appdirs.site_data_dir(),
                        "__SITE_CONFIG_DIR__": appdirs.site_config_dir(),
                        "__USER_DATA_DIR__": appdirs.user_data_dir(),
                         "__USER_CONFIG_DIR__": appdirs.user_config_dir()

17/9/2014 0.9.15   Shai Shasag <shai@waves.com>

    user visible changes::
    * remove command fully implemented.
    * Fixed handling of pre_copy_item when no items to copy to folder.
    * Added __TARGET_DIR__ var on remove folder loop - still need to add in other loops
    * Fixed Windows recursive rmdir in PlatformSpecificHelperWin
    * Overhaul of all actions names. New names are:
        'pre_copy', 'pre_copy_to_folder', 'pre_copy_item',
        'post_copy_item', 'post_copy_to_folder', 'post_copy',
        'pre_remove', 'pre_remove_from_folder', 'pre_remove_item',
        'remove_item', 'post_remove_item', 'post_remove_from_folder', 'post_remove'
    * target folders in remove sorted in reverse
    * New command remove-empty-folders: removes empty folders or folders containing only ignired files.
        List of ignored files are specified in REMOVE_EMPTY_FOLDERS_IGNORE_FILES variable.

    admin visible changes::

    programmer visible changes:
    * Removed redundant imports using snakefood
    * Removed redundant file do_something.py
    * improved handling of Null values in resolve_to_list
    * New defaults file InstlMisc.yaml with definition of REMOVE_EMPTY_FOLDERS_IGNORE_FILES

 24/6/2014 0.9.14   Shai Shasag <shai@waves.com>

     user visible changes::
     * Names of curl config files have same legth due to 0 padding the number. This will creaet more stable
       progress report in a progress dialog.


22/6/2014 0.9.14   Shai Shasag <shai@waves.com>

     user visible changes::
     * new command test-import to force loading of all required modules provoking error if any import fails.


20/6/2014 0.9.13.1   Shai Shasag <shai@waves.com>
    user visible changes: & admin:
    * Fixed exceptions in interactive mode - no functionality change.

16/6/2014 0.9.13   Shai Shasag <shai@waves.com>

    programmer visible changes:
    Integrated all var-stack features:
    * InstallItem creates it's own var_list.
    * InstallItem pushes it's own var_list to var_stack through 'with' statement.
    * All action lists for an Installitem are taken from var_stack with variables.

9/6/2014 0.9.12   Shai Shasag <shai@waves.com>

    user visible changes::
    * new variable __PYTHON_VERSION__ to record the version of python instl was compiled with

    admin visible changes::
    * Added option to limit stage2svn to specific folders, to save time.
    * up-repo-rev now creates a batch file like all other commands.
    * up-repo-rev does not use boto - depends on aws command line tools.
    * No more usage of AWS keys inside instl or created batch files. All AWS config comes from the ./aws/config file.

    programmer visible changes:
    * New resolve methods for ConfigVarList: resolve, resolve_to_list, replace previous methods: get_str, resolve_string
        get_list.New methods are faster and simpler to unserstand.
    * Tests for new resolve methods.
    * Removed unused member Configvar.__resolving_in_progress, preventing circular resolves is done in ConfigVarList.
    * Introduced $(A[0]) array style references.
    * up2s3 calls up-repo-rev with --out parameter

28/5/2014 0.9.11   Shai Shasag <shai@waves.com>
    user visible changes::
    * Fixed a problem where index.yaml would not be copied to bookkeeping when syncing to DOK.

    programmer visible changes:
    * Copy tools got a new method copy_file_to_file.

27/5/2014 0.9.10   Shai Shasag <shai@waves.com>

    user visible changes::
    * Removed redundant echo during copy.
    * Fixed: set-exec was not called or caled using the wrong have-info-map file if command was synccopy.

    admin visible changes::
    * wtar command: removed previously wtar files if tarring should be preformed.

13/5/2014 0.9.9   Shai Shasag <shai@waves.com>

    user visible changes::
    * New line after each folder in copy operations.
    * No redundant cd to folder that has not actions for non copying items.
    * When unwtaring, if .done exists it's date compared to the target file.
    * Compilation time and compiling machine displayed as part of version

    admin visible changes::
    * wtar command checks if tared files should be executable and adjust. it's permissions.
    * stage2svn & wtar commands use chflags -R nouchg to remove the Lock flag that might be on files copied from smb server.
    * Changed options for fix-symlinks command, instead of --folder, the folder will be taken from the STAGING_FOLDER
        given in the --config-file option. Also --svn was deleted as it was never used.
    * wtar command: before wtaring, check and fix permissions for all that is being tarred.

    programmer visible changes:
    * New method InstlItem.all_action_list, returns a list of all actions for an item (before, after, folder_in, folder_out,
        copy_in, copy_out) intended so the total number of actions for item can be known.
    * New methods for InstlAdmin: is_file_exec, should_file_be_exec to deal with executable bits in the staging folder.
    * Removed unused methods of InstlInstanceSync_url: create_unwtar_instructions_for_item, create_checksum_instructions_for_item,
        these already have their own instl command.
    * New platformHelper method chmod: implemented for Linux and Mac only. make_executable is now implemented using chmod.
    * New platfromHelper method: unlock, Remove the system's read-only flag, implemented for Mac only.
    * New internal variables, created during compilation: __COMPILATION_TIME__, __SOCKET_HOSTNAME__, __PLATFORM_NODE__

11/5/2014 0.9.8   Shai Shasag <shai@waves.com>

    user visible changes::
    * Made progress messages more suitable for display in Central.
    * actions output messages changed to "pre-install step" "post-install step",  "pre-copy step", "post-copy step"
    * Improved help texts.
    * New help topic 'defaults' will display default variables and their values.
    * Copy instructions are performed from top folder down.
    * During copy all target folders are created before any other action, so to avoid dependency order problems such as creating
        links between folders

    admin visible changes::
    Added variables PUBLIC_KEY_FILE, PRIVATE_KEY_FILE to defaults file InstlAdmin.yaml.

    programmer visible changes:
    * Copy now sorts the install_items_by_target_folder list.

4/5/2014 0.9.7   Shai Shasag <shai@waves.com>

    user visible changes::
    * Display if checksum fails for a file, output expected and found checksums.

    admin visible changes::
    * Fixed a problem where softlinks would be followed during wtar.
    * Added progress report to fix-symlinks
    * Added progress report to stage2svn
    * Command up-repo-rev: added the option to up load only the repo rev file with the number at it's tail, not the official one.
        The option in called --just-with-number.
    * Command up2s3: Now uploads the numbers repo-rev file using the new option --just-with-num of command up-repo-rev.
    * Command file-props:
          - The command did not actually work until now, just printed what should have been done - now it works.
          - file svn-proplist-for-fix-props.txt is created for reference.

29/4/2014 0.9.6   Shai Shasag <shai@waves.com>


    user visible changes::
    * new initial vars defined in main: __USRER_ID__, __GROUP_ID__ record the user and group when instl was called.
        Useful for usaing in the produced script, when called as sudo, to set permissions to the original owner.
    * New variable from main.yaml: MKDIR_CMD to be able to call from index and mkdir command defined by instl.
        In this case on Mac MKDIR_CMD expands to mkdir_with_owner.
    * Copy now calls mkdir_with_owner on Mac so to properly set owner and permissions for created folders.
    * Copy scripts on Mac get a function mkdir_with_owner so to properly set owner and permissions for created folders.
    * new method PlatformSpecificHelperBase.mkdir_with_owner defaults to PlatformSpecificHelperBase.mkdir,
        implemented on Mac to call locally defined mkdir_with_owner.


27/4/2014 0.9.5  Shai Shasag <shai@waves.com>

    user visible changes::
    * Improved support for syncing from perforce.
    * Logging of echo messages from batch files by using new variable ECHO_LOG_FILE. (Mac)
    * added --group --owner to rsync commands - should preserve user/group when copying under sudo.

    programmer visible changes:
    * New type of defaults file by repo type, i.e. P4.yaml, URL.yaml. Currently added P4.yaml to defaults folder.
    * New utility function: P4GetPathFromDepotPath to get the local disk path from p4 depot path.
    * Usage of $(LOCAL_REPO_SOURCES_DIR) instead of $(LOCAL_REPO_SYNC_DIR)/$(SOURCE_PREFIX) - because p4 does not need SOURCE_PREFIX.
    * new variable: ECHO_LOG_FILE. If defined all echos from batch file will be teeed to this file. (Mac).

    admin visible changes::
    * new method  configVarList.defined returns true if a value is defined and has none empty value.
        So calling with a variable name who's value consists of an empty string will return False.

16/4/2014 0.9.4  Shai Shasag <shai@waves.com>

    user visible changes::
    * Added new actions types for install items: copy_in, copy_out.
    * Added  copy_in actions for Au regi utility

    programmer visible changes:
    * new method accumulate_unique_actions to replace repeating code.


8/4/2014 0.9.3 Shai Shasag <shai@waves.com>

    user visible changes::
    * Streamlined logging. Removed many redundant messages added some useful others.
    * Fixed: Executable files on Mac would not get executable bit.

    admin visible changes::
    * New command set_exec, sets executable bit for files marked as fx in info_map.txt

    programmer visible changes:
    * SVNItem.num_subs_in_tree has new parameter: predicate this can be used to filter the number of files,
        defaults to True so previous behaviour remains.

6/4/2014 0.9.2  Shai Shasag <shai@waves.com>

    user visible changes::
    * Fix --run where path to batch has spaces in name (Windows).

3/4/2014 0.9.1  Shai Shasag <shai@waves.com>

    user visible changes::
    * Fixed exception when trying to read public key file.

30/3/2014 0.9.0  Shai Shasag <shai@waves.com>

    user visible changes::
    * interactive command eval renamed python.
    * New interactive command: resolve, will resolve variables in a string.

    admin visible changes::

    programmer visible changes:
    * Removed variable __CHECKOUT_FOLDER__, it is totaly replaced by $(ROOT_LINKS_FOLDER_REPO)/Base.
    * Moved pyinstaller build scripts to inside the instl repository
    * PUBLIC_KEY is read from  PUBLIC_KEY_FILE and PUBLIC_KEY_FILE is searched with search paths in read_include_node
        and in init_sync_vars.

13/3/2014 0.8.10  Shai Shasag <shai@waves.com>

    user visible changes::
    * Main feature: support for Windows XP.
    * Fixed: COPY_TOOL set to xcopy was ignored (WinXP).
    * Solved weird problems with xcopy. The /EXCLUDE option of xcopy cannot except a file with space it's path,
        nor will it except a quoted path. So the excludes file is copied to each and every target folder
        during the copy stage.
    * Fixed: when compiled raised exceptions would not cause exit code > 0 (Windows).
    * Fixed: Redundant messages when checksum fails.
    * Shorter max time for curl since now no file is > 5MB.
    * Fixed a bug in function need_to_download_file where True was always returned. This caused already downloaded files
        to be redownloaded if some situations.
    * PARALLEL_SYNC: 32 - new default

    admin visible changes::
    * More concise messages for create-links and up2s3

    programmer visible changes:
    * Moved the initialization of copytool to after reading the main yaml file.
    * Fixed: Some inconsitancies in CopyTool_win_xcopy commands.
    * New variables: XCOPY_EXCLUDE_FILE_NAME, XCOPY_EXCLUDE_FILE_PATH to overcome xcopy limitations.
    * New copy tools methods begin_copy_folder, end_copy_folder  to overcome xcopy limitations.
    * Changes to variable names:
         LOCAL_SYNC_DIR now always refers to the to top level sync dirs - above repo sync dir.
         LOCAL_REPO_SYNC_DIR - new - defaults to $(LOCAL_SYNC_DIR)/$(REPO_NAME), e.g.
            /Users/shai/Library/Caches/Waves Audio/instl/instl.waves.com/V9_test
         SOURCE_PREFIX - new - defaults to $(TARGET_OS)
         LOCAL_BOOKKEEPING_PATH - renamed LOCAL_REPO_BOOKKEEPING_DIR
         REPO_REV_LOCAL_BOOKKEEPING_PATH - renamed LOCAL_REPO_REV_BOOKKEEPING_DIR
         LOCAL_REPO_SOURCES_DIR - removed - use $(LOCAL_REPO_SYNC_DIR)/$(SOURCE_PREFIX) instead
         SYNC_TRAGET_OS_URL - removed - replaced by $(SYNC_BASE_URL)/$(TARGET_OS)
    * Due to variable changed method InstlClient.init_copy_vars is empty now.
    * functions main_url_item now return parseResult.netloc OR parseResult.path not both

5/3/2014 0.8.9 Shai Shasag <shai@waves.com>

    user visible changes::
    * create-folders, unwtar and check-checksum are now done as internal instl commands instead of relying on external utilities.
    * During unwtar if .wtar.aa file is joined, .wtar.done file is removed.
    * New command create-folders will create folders for sync according to the to_sync_info_map.txt.
    * New command check-checksum will check checksums according to the to_sync_info_map.txt.
    * InstlMisc commands report execution time.
    * Windows: robocopy copy_dir_to_dir has /PURGE parameter so that redundant files in the target will be removed.
    * Mac: rsync copy_dir_to_dir has --delete parameter so that redundant files in the target will be removed.

    admin visible changes::
    * Creation of .txt files for all files in instl directory was moved from up2s3 command to create-links command.
    * up2s3 will upload up to the latest repo revision and not up to BASE_REPO_REV.
    * Options --start-progress and --total-progress become optional (for commands that accept them).
        Not supplying means there will be no progress report.
    * InstlMisc commands can report progress, some do it with staccato.

    programmer visible changes:
    * platformHelper renamed platform_helper everywhere.
    * New method InstlAdmin.get_last_repo_rev.
    * init_from_cmd_line_options can now assign defaults to options that were not specifed on the command line.
    * InstlMisc commands can now report progress by using --start-progress and --total-progress command line options.
    * PlatformSpecificHelperBase.check_checksum renamed check_checksum_for_file.
    * New method PlatformSpecificHelperBase.check_checksum_for_folder
    * PlatformSpecificHelperBase.unwtar renamed unwtar_file.
    * Method PlatformSpecificHelperBase.unwtar_current_folder, with added exit_if_error for windows.

4/3/2014 0.8.8 Shai Shasag <shai@waves.com>

    user visible changes::
    * Fixed a problem where files created when instl runs under sudo,
        could not be re-written under regular user.
    * unwtar command added - replaced individual batch file unwtar commands with inst unwtar.
    * Big files above 5MB will be wtared and split into chuncks is the result wtar if is larger than 5MB.
    * New variable: COPY_IGNORE_PATTERNS instead of hard coded in the copy producing code.
    * sync command will report the number of files to sync.

    programmer visible changes:
    * os.umask(0) is called first thing.
    * batch file creation does chmod(777).
    * New method PlatformSpecificHelperBase.unwtar_current_folder.
    * Fixed: instl would not create a correct call for itself (e.g. instl unwtar) when running uncompiled on windows.

26/2/2014 0.8.7 Shai Shasag <shai@waves.com>

    user visible changes::
    * When using --run and script fails, exit code is passed correctly.
    * Proper downloading for all possible required items when target_os != current_os (offline sync).
    * Fixed: When running compiled instl in interactive mode exception was raised when instlClient and instlAdmin
        defined the same const values.
    * Better message if checking signature of a downloaded file fails.

    programmer visible changes:
    * init_download_tool method added to platformHelper so that the dl_tool can be initialized after the yaml files were read.
    * New defaults in main.yaml: Win_ALL_OS_NAMES, Mac_ALL_OS_NAMES.
    * Correct list of target OS names is produced in case TARGET_OS != CURRENT_OS.
    * Calling add_const_config_variable twice will not raise exception if the new and previous values are identical.

24/2/2014 0.8.6 Shai Shasag <shai@waves.com>

    user visible changes::
    * ACCEPTABLE_YAML_DOC_TAGS from main.yaml was missing from th ecompiled version.
    * version command will add "(not compiled)" if instl is running though python interpreter.
    * New var: __INSTL_COMPILED__ set to True is instl was compiled and False is running though python interpreter.

    admin visible changes::
    * fix props:    write svn info to file for debugging and reference. But go one folder up so not to be in the svn repo.

    programmer visible changes:
    * augmentedYaml when running as __main__ can open urls.
    * platformHelper's copy tool is now initialized early so it can be used by InstlInstanceBase.
    * check_prerequisite_var_existence put to good use.
    * copy field added to cached includes, specifying where to copy the file.
    * new batchAccum sections post-sync, post-copy.
    * platformHelper's copy_file_to_file can create a hard link on Mac/linux.

19/2/2014 0.8.5 Shai Shasag <shai@waves.com>

    user visible changes::
    * Fixed many sync bugs especialy on Windows.
    * New automatic installation items:
        __ALL_ITEMS_IID__:  all the iids from the index
        __ALL_GUIDS_IID__: all the iids from the index that have guids.
    * Fixed a bug where depend on a guid would not register as depend.
    * Time reporting on exit with error on Mac.
    * Download max-time, connect-timeout and retry have all been increased.
    * More precise, and less verbose, progress messages. No fake progress message when there's nothing to be done.
    * More precise decision when to untar existing wtar files.
    * New Yaml variable: LAST_PROGRESS, set the number of progress items to start with, so two batch files can have
        consecutive progress reports. Defaults to 0.
    * After creating a batch file, the full path to file is printed and the number of progress items.
        This number can be passed to the next invocation of instl as LAST_PROGRESS variable.
    * curl will print "Progress ... of ...;" at the beginning of each report line, to allow the invoker of
        the batch file to track progress even in the absent of absolute numbers.
    * New include style:
        url: $(INDEX_URL)
        checksum: $(INDEX_CHECKSUM)
        sig: $(INDEX_SIG)
        This will cache the file and use the local copy if it matches signature and checksum.
    * Sync command adds __NUM_FILES_TO_DOWNLOAD__ variable with the number of files to download.
    * New yaml doc type !define_const - will create const variables and will not except __include__'s.
    * curl config files and file with list of curl commands are written to a folder named "curl".
        This will avoid clutter in the sync folder and make deleting easier.
    * No more DL_INSTRUCTIONS_TYPE, always use config file. To do non parallel download set PARALLEL_SYNC: 1.
    * Variables ending with _PATH or _DIR will have their value go through os.path.normpath - for proper paths on Windows.
    * New variable: __READ_YAML_FILES__ will list all yaml files that were read.
    * Fixed on Windows: PlatformSpecificHelperWin.touch implemented correctly.

    programmer visible changes:
    * New utils function: safe_remove_file, removes a file and does not complain if file does not exist.
    * New utils function: make_one_list, takes a bunch of things and returns them as a long flat list.
    * New PlatformSpecificHelperBase function progress_staccato, issues a progress message only after a predefined number of requests.
    * New param to PlatformSpecificHelperBase function progress, num_items, can be used to increase the number of
        total progress items not just by one.
    * New PlatformSpecificHelperBase functions: pushd, popd. They do same as they do on the command line.
    * New PlatformSpecificHelperBase function: touch. Does same as it does on the command line.
    * Mac: exit is done by a function that catches the EXIT trap os that all final instructions are performed even on error.
    * Untaring writes a stamp file when finished corectly. Will prevent redundant re-untar.
    * New BatchAccumulator function __len__, returns the total assignments and instrauction lines.
    * parallel_run.py: plain exit() did not work in compiled code, replaced with sys.exit().
    * got rid of redundant __ALLOWED_COMMANDS__ variable and checking.
    * instlInstanceBase.get_default_sync_dir overhaul  - will use $() variables and will need resolving.
    * Fixed ConfigVar.__str__ so values appear before description.
    * Removed redundant imports from helpHelper.py.
    * Refactored InstlClient to work with standard do_ ... functions for commands.
    * InstlClient.installState is now a member.
    * InstlClient.init_copy_vars moved from instlInstanceBase.
    * Many default variables read from files instead of being hard coded.
    * Added default files for all instl (main.yaml) and for specific classes (instlAdmin, InstlClient).
    * Fix on Windows: Hard coded path replaced by $(CHECKSUM_TOOL_PATH) check_checksum_for_file.
    * CopyTool_win_robocopy, CopyTool_win_xcopy, PlatformSpecificHelperWin will call os.path.normpath on parameters containing paths.


13/2/2015 0.8.4 Shai Shasag <shai@waves.com>

    user visible changes::
    * Fixed: on windows files with '&' in name would not pass checksum check.
    * All curl downloads are performed though instl own parallel-run command.

    admin visible changes::
    * platfotmSpecificHelper methods svn_add_item, svn_remove_item use $(SVN_CLIENT_PATH) instead of plain svn.
    * overhual to do_up2s3, loop on relavent revisions instead of exiating folders.
    * overhual to do_fix_props, make it less verbose and better messages.
    * svn2stage, stage2svn will not use rsync link_dest, because it confuses svn.

    programmer visible changes:
    * New function for windows dos_escape, escapes the & character with ^&

11/2/2014 0.8.3 Shai Shasag <shai@waves.com>

    user visible changes::
    * curl connect-timeout = 3 instead of 60
    * improved reporting on config file curl downloads.
    * Fixed: empty config files were created if the number of files to download was smaller than the number of config files.
        Now each config file will have at least 4 urls.
    * curl: shorter connect-time - 3 sec.
    * curl: shorter max-time - 60sec.
    * curl: three retries
    * create_prefix_instructions_for_item_config_file checks if folder exists before issuing mkdir.
    * sync command: Hack to force untaring of .wtar files by forcing them to be downloaded again.
    * create_config_files will return empty list if there were no files to download.
    * Windows 7za untaring got a -bd flag to reduce verbosity.
    * Windows: errorlevel checking on 7za untaring.
    * Windows: 7za untaring redirect stderr to NUL, because 7za trash-talks no error messages to stderr.

    admin visible changes::
    * New command: verify-index, helps admin find problems in index and info map.

    programmer visible changes:
    * quoteme_single, quoteme_double moved to utils for all to enjoy.
    * member install_definitions_index, method read_index, moved to InstlInstanceBase so instlAdmin can also use them.
    * InstallItem.add_source also adds the type for the source (!file, !dir, et...)

10/2/2014 0.8.2  Shai Shasag <shai@waves.com>

    user visible changes::
    * Fixed wrong relative path created for create-links command.
    * Added time measurements to batch file produces for windows.
    * Removed redundant quotes from echo messages on windows.
    * Added DownloadTool_win_curl in one-by-one and config-file modes.
    * Added progress message to pre and post parallel sync actions.
    * Windows: Added checking of 7za return value and goto exit if > 0
    * Windows: Divert 7za stderr message to NUL since non-error messages are directed to stderr by 7za.

    admin visible changes::
    * usage of $(SVN_CLIENT_PATH) instead of svn in all adming commands.
    * Fixed: fix-props output batch file was not written to the current folder.
    * Fixed wrong relative path created for create-links command.

    programmer visible changes:
    * Creation of PlatformSpecificHelper moved to do_command so it can take to consideration settings from the yaml file.

3/2/2014 0.8.1 Shai Shasag <shai@waves.com>

    user visible changes::
    * Little faster sync/copy/syncopy due to optimiztions in SVNItem.
    * Fixed copy_dir_to_dir on Mac that did not create hard links
    * Fixed new_item_at_path that did not create the have map correctly

    admin visible changes::
    * New command: create-repo-rev-file, to separate repo rev file creation and uploading.
    * command up-repo-rev only uploads the already created repo rev file.
    * type fixed REPO_REV_FILE_VARS instead of REPO_REV_FILE_VARAIBLES

    programmer visible changes:
    * some rearranging of parser creation, and removed redundant members from CommandLineOptions
    * moved the discovery of info_map's file type to svnTree.py
    * added ConfigVar.resolved_num to help track which var is used in which command.
    * PlatformSpecificHelper's var_assign got new param: comment
    * Many optimizations to SVNItem code.
    * Using cStringIO instead of StringIO.
    * Test files for SVNTree test will be produced without comments, also changed the reference file.
    * added tests for test_platformSpecificHelper not finished yet.
    * copy_tool.copy_file_to_dir accepts bool for link_dest and should figure the destination.
    * info_map write files accept a comments param.
    * safe_makedirs will return the dir it made.

29/1/2014 0.8.0 Shai Shasag <shai@waves.com>

    Main 0.8.0 features:
    * Create and check signature for info_map.txt file

    user visible changes::
    * using STAGING_FOLDER, SVN_CHECKOUT_FOLDER, SVN_CLIENT_PATH, DOWNLOAD_TOOL_PATH, CHECKSUM_TOOL_PATH instead of
        __STAGING_FOLDER__ , __SVN_FOLDER__, __RESOLVED_SVN_CLIENT_PATH__, __RESOLVED_DOWNLOAD_TOOL_PATH__,
        __RESOLVED_CHECKSUM_TOOL_PATH__
    * wtar files are expanded during sync not during copy
    * Fixed unwtar for Windows
    * InstlInstanceSync_url.read_remote_info_map checks signature against public key.
    * If file to download is already present, no not check checksum in batch file.    user visible changes::
    * option --config_file renamed --config-file, for easy typing experience
    * added some missing command help text.

    admin visible changes::
    * New command svn2stage, to prepare folders for entering changes
    * New command wtar, to proparly tar what needs to be tared
    * New command createkeys
    * up_repo_rev calculates sig for info_map.txt if INFO_MAP_SIG is defined in config file.
    * New command make-sig creates sha1 checksum and rsa signature for a file, needs private key.
    * New command check-sig checks sha1 checksum and rsa signature for a file, needs public key.
    * command up_repo_rev renamed up-repo-rev, for easy typing experience
    * command fix_props renamed fix-props, for easy typing experience
    * command fix_symlinks renamed fix-symlinks, for easy typing experience
    * command createlinks renamed create-links, for easy typing experience.
    * command createkeys renamed create-rsa-keys, for easy typing experience and more fitting name.
    * PUBLIC_KEY variable is created by reading PUBLIC_KEY_FILE, unless it's already defined.
    * PRIVATE_KEY variable is created by reading PRIVATE_KEY_FILE, unless it's already defined.
    * repo rev file will be saved with $(REPO_REV) appended to the name.
        Will be uploaded twice with and without the $(REPO_REV) in name.

    programmer visible changes:
    * New method for PlatformSpecificHelperBase & derivatives: tar/untar
    * Implemented rmdir, rmfile for Windows
    * removed checks for __ALLOWED_COMMANDS__, this functionality is already covered by getattr(self, "do_"+the_command)
    * @func_log_wrapper removed from all functions. It interfered with PyCharm debugging.
    * instlInstance replaced with instlObj to make lines shorter.
    * download_from_file_or_url function: added params for checking signature with public key.
    * prevent variables INFO_MAP_SIG, PUBLIC_KEY from being written to batch file.
    * started checking of info_map.txt when downloading.
    * many new checksum and signature functions.
    * rearranged instl_help.yaml commands in alphabetical order.
    * download_from_file_or_url can check signature or checksum if they are given.
    * command createlinks renamed create-links, for easy typing experience.
    * command createkeys renamed create-rsa-keys, for easy typing experience and more fitting name.
    * parser returns the name of all possible commands.
    * fixed bugs in check_buffer_signature_or_checksum
    * removed redundant double check for info_map file existence in read_remote_info_map

26/1/2014 0.7.2  Shai Shasag <shai@waves.com>

    user visible changes::
     * Fixed exception handling and output to stderr.
        Now all "bad" output should go to stderr. Errorlevel should be proearly set.

23/1/2014 0.7.1 Shai Shasag <shai@waves.com>

    user visible changes::
    * progress report for folder actions
    * SET_ICON_TOOL_PATH instead of SET_ICON_PATH
    * better progress report for svn sync

23/1/2014 0.7.0 Shai Shasag <shai@waves.com>

     Main 0.7.0 features:
    * Check checksum of files after download.
    * Conditional document tags in yaml (see below)

    user visible changes::
    * Windows: wget gets --quite option
    * Windows: Running mkdir only if path does not exist
    * Removed the --state option, it was not working.
    * Removed the commands 'alias', 'shortcut' and 'fix_icon' , they were not used.
    * New help system: Usage: instl help command
    * Mac and Linux: "#!/usr/bin/env bash" instead of "#!/bin/sh" to be the shebang
    * Mac: Time measurement reporting in batch files
    * Checksum checking code
    * Windows: exit_if_error is added after most created batch file lines
    * All Mac & Linux rm commands generated by code were added the -f flags
    * Check for existance of file and it's checksum before issuing a sync command.
        Should be useful if sync was stopped half-way
    * Conditional document tags in yaml. Variable ACCEPTABLE_YAML_DOC_TAGS can specify additional doc tags that should start
        with index or define.
        Example:
            ACCEPTABLE_YAML_DOC_TAGS: define_$(TARGET_OS)
            Would later read sections starting with !define_Win - if Win is the target os.
    * Fixed bugs in interactive mode list command.
    * name of batch file is printed after it is written
    * variable TARGET_OS_SECOND_NAME defaults to os_second_name
    * Fixed list guid in interactive mode
    * Variable SEARCH_PATHS enables so set search paths in the yaml file.
    * improved reporting of bad checksum on windows.
    * Windows: robocopy might exit with error even if there are no errors. So error checking for robocopy is now level dependent.
    * resolve_defined_paths: SEARCH_PATHS, PATHS_TO_RESOLVE
    * sync message outputs the url for each file

    Changes to V9_test repository that do not effect code
    * 7ZA_CLIENT_PATH renamed WTAR_OPENER_TOOL_PATH, the 7 probably caused problems on windows
    * All Mac rm commands in index were added the -f flags
    * DOWNLOAD_TOOL_PATH moved to index.yaml
    * Mac:Setting of .framewoks to be bundles is now done by a new version of setIcon.
    * CURRENT_OS_NAMES renamed __CURRENT_OS_NAMES__

    admin visible changes::
    * New command stage2svn
    * Exception is thrown if unknown admin command is called
    * up_repo_rev now accepts only one option: --config_file, repo_rev file to upload is
        created on the fly.
    * Changed fix_props command to read information from config file.
    * trans command new option --base-repo-rev instead of --config-file that supplied the value before
    * createlinks will remove the up2s3 stamp file - if there is any
    * up2s4 will upload .txt versions of .yaml|info|props files in the instl folder
        so these files can be displayed in a browser.
    * ROOT_LINKS_FOLDER renamed ROOT_LINKS_FOLDER_REPO. ROOT_LINKS_FOLDER will point to the links folder above all repositories
    * repo_rev file is saved to "$(ROOT_LINKS_FOLDER)/admin"
    * Adjusted createlinks to work on local path urls

    programmer visible changes:
    * Copy tools now accept a list of ignores and don't just assume .svn and *.symlink should be ignored
    * CopyToolMacRsync and CopyToolLinuxRsync now inherit from common CopyToolRsync
    * quoteme function is now quoteme_double and a new function is born: quoteme_single
    * Improved ConfigVarList.repr_for_yaml: added option not to write comments, add !define tag to document.
    * Reorganised instl command line parser
    * Data files (currently inst_help.yaml) can be accessed from instl when it's compiled.
        Using the new function get_data_folder()
    * Removed unused functions do_create_readlinks & do_resolve_readlinks as they are now
        incorporated into fix_symlinks.
    * Read/Write of info files can handle checksum field for files. All formats info/text/yaml
    * Fixed: --run option was required for trans command, although run is not relevant for this command.
    * Function renames: create_download_file_to_file_command -> download_url_to_file
                        create_download_from_config_file -> download_from_config_file
                        add_dl -> add_download_url
    * CopyTool classes and DownloadTool classes have platformHelper member,
        initialized in super, and so now all such classes have __init__ methods
    * ConfigVarList.is_resolved checks is a string has no $() references
    * Added data folder to search paths, removed the instl executable which was not usefull since it's a file.
    * file read for checksum using "rb" for Windows' sake.
    * download_from_file_or_url writes with "wb" for windows' sake.
    * option to redirect robocopy log to instl log - currently only from code not for variables.

9/1/2014 0.6.5  Shai Shasag <shai@waves.com>

    user visible changes::
    * Windows: improved batch file creation: @echo off
    * create_variables_assignment now always writes all internal variables, even in debug mode.
    * Output files on Linux and Mac get "set -e" so the fail if any sub-commands fails.

    admin visible changes::
    * added fix_symlinks command to replace symlinks with .symlink files. Worls only on Mac.
    * changed behaviour of create_links and up2s3 to be responsible for the whole links folder
        and to figure out want needs to be copied and what needs to be uploaded.
        --revision command line option is not available any more.
    * added fix_props command to add/remove inappropriate properties in the svn repository.
    * stamp file for createlinks and up2s3 will contain the base_repo_rev.
        So if repo_rev changes, new links will be created and uploaded.

    programmer visible changes:
    * Variable ROOT_VERSION_NAME changed to REPO_NAME
    * fixed: ConstConfigVar cannot refer to an inherited member that begin with __.
        So the getter function is called instead.
    * platformSpecificHelper rmdir method accepts new parameter 'recursive'
        when True enables the deletion of non-empty directories.
    * SVNTopItem new method min_max_rev, returns the minimal and maximal last_rev
        of it's sub-items.
    * CONFIG_FILE renamed __CONFIG_FILE__ because it's an internal variable.
    * __CONFIG_FILE__ is resolved and value assigned to __CONFIG_FILE_PATH__.
    * Config file is read once for all commands.
    * added props member to SVNItem to hold properties that are not executable or special (symlink)
    * Rearranged instlAdmin.py to deduce the name of the method to run from the command name
        ("fix_symlinks" -> do_fix_symlinks()))
    * fixed typos and redundant lines in progress report.

2/1/2014 0.6.4  Shai Shasag <shai@waves.com>
    user visible changes:
    * instl version command works.
    * produced files get remark with the version of instl that created them.
    * sync one_by_one produces meaningfull progress report.
    * Windows: can download files with spaces in their name, such as "WaveShell-DAE 9.2.dpm".

    programmer visible changes:
    * Windows: urls need to escape spaces as %20, but windows batch files already
        escape '%' characters so use urllib.quote to escape spaces and then change
        %20 to %%20.

2/1/2014 0.6.3  Shai Shasag <shai@waves.com>
    * recompiled 0.6.3 for windows because the file instMisc.py was missing from previous
        compilation.

1/1/2014 0.6.3  Shai Shasag <shai@waves.com>
    user visible changes:
    * Printing exceptions with traceback and returning proper exit code in case of failure
    * Renamed GET_URL_CLIENT_PATH to DOWNLOAD_TOOL_PATH
    * Removed unecessary indentation in svn output files
    * Fixed get_install_instructions_prefix for Mac - #!/bin/sh returned first
    * No resolving of readlink files. Temporary until we fiind a coherent method of handling symlinks
    * produced batch files on windows return to the orignal starting dir

    programmer visible changes:
    * Raising exception if REPRO_TYPE is not defined for sync command
    * Raising exceptions in instl.main (handled and unhandled)
    * DOWNLOAD_TOOL_PATH used as variable in download tools
    * Added return_original_if_not_found to instlInstance.search_paths_helper.find_file_with_search_paths
    * import urllib in platformSpecificHelper_Win
    * Normalized paths for windows, so they always have \. Since some DOS commands cannot handle /

2013-12-30 0.6.2  Shai Shasag <shai@waves.com>
    user visible changes:
    * curl DL_INSTRUCTIONS_TYPE: either config_file or one_by_one
    * new instl commands:
        ** create_readlinks, creates .readlink files instead of symlink
        ** resolve_readlinks creates symlinks instead of .readlinks file - currentlu used in copy on Mac OS
    * trans command now reads BASE_REV from config file, has new option --config
    * up2s3 command implemented using aws and writes a batch file like all other commands
    * up2s3 command can be used on a range of versions
    * * fixed bad handling of \r\n in info_map files on Windows 

    programmer visible changes:
    * new function SVNItem.walk_items_depth_first, and tests for this function
    * platformSpecificHelper_XXX new functions: rmfile, rmdir, not implemented for windows yet
    * variable BASE_REPO_REV default set to 1 for all commands
    * CONFIG_FILE variable instead to S3_CONFIG_FILE and used by all instlAdmin commands

2013-12-29  0.6.1  Shai Shasag <shai@waves.com>
    * fixed wrong depends calculation.
    * special characters in urls given to curl are now escaped using the %xx convention
