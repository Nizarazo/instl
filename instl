#!/usr/local/bin/python2.7

from __future__ import print_function # 123

import sys
import os
import logging
import logging.handlers

# setup logging, must be done before other imports
from pyinstl.log_utils import setup_logging
setup_logging("instl", "instl")

import pyinstl
from pyinstl.instlException import InstlException

import platform
current_os = platform.system()
if current_os == 'Darwin':
    current_os = 'Mac'
    from pyinstl.instlInstance_mac import InstlInstance_mac as ii
elif current_os == 'Windows':
    current_os = 'Win'
    from pyinstl.instlInstance_win import InstlInstance_win as ii

@pyinstl.log_utils.func_log_wrapper
def main():
    try:
        instance = ii()
        instance.read_command_line_options(sys.argv[1:])
        if instance.mode == "batch":
            instance.do_command_batch_mode()
        elif instance.mode == "interactive":
            instance.do_da_interactive()
        elif instance.mode == "do_something":
            instance.do_something()
    except InstlException as ie:
        print("instl exception",ie.message)
        from pyinstl.log_utils import debug_logging_started
        #from pyinstl.log_utils import get_log_file_path
        #print(get_log_file_path('instl', 'instl', True))
        if debug_logging_started:
            import traceback
            traceback.print_exception(type(ie.original_exception), ie.original_exception,  sys.exc_info()[2])
    except Exception as ex:
        print("unhandled exception")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
