--- !define

PARALLEL_SYNC: 32
CURL_CONFIG_FILE_NAME: Download-Thread
CURL_CONNECT_TIMEOUT: 16 # Maximum time in seconds that you allow curl's connection to take. This only limits the connection phase, so if curl connects within the given period it will continue - if not it will exit.
CURL_MAX_TIME: 180       # Maximum time in seconds that you allow the whole operation to take. This is useful for preventing your batch jobs from hanging for hours due to slow networks or links going down.
CURL_RETRIES: 3          # If a transient error is returned when curl tries to perform a transfer, it will retry this number of times before giving up. Setting the number to 0 makes curl do no retries (which is the default).
CURL_RETRY_DELAY: 30     # Make curl sleep this amount of time before each retry when a transfer has failed with a transient error (it changes the default backoff time algorithm between retries).


LOCAL_SYNC_DIR: $(USER_CACHE_DIR)/$(S3_BUCKET_NAME)
LOCAL_REPO_SYNC_DIR: $(LOCAL_SYNC_DIR)/$(REPO_NAME)
LOCAL_REPO_BOOKKEEPING_DIR: $(LOCAL_REPO_SYNC_DIR)/bookkeeping
HAVE_INFO_MAP_FILE_NAME: have_info_map.txt
HAVE_INFO_MAP_PATH: $(LOCAL_REPO_BOOKKEEPING_DIR)/$(HAVE_INFO_MAP_FILE_NAME)
# copy might read NEW_HAVE_INFO_MAP_PATH copy.sh is created before sync.sh was ran
# this will be indicated in the copy.yaml file
HAVE_INFO_MAP_FOR_COPY: $(NEW_HAVE_INFO_MAP_PATH)
NEW_HAVE_INFO_MAP_PATH: $(LOCAL_REPO_BOOKKEEPING_DIR)/new_$(HAVE_INFO_MAP_FILE_NAME)
REQUIRED_INFO_MAP_PATH: $(LOCAL_REPO_BOOKKEEPING_DIR)/required_info_map.txt
TO_SYNC_INFO_MAP_PATH: $(LOCAL_REPO_BOOKKEEPING_DIR)/to_sync_info_map.txt
LOCAL_REPO_REV_BOOKKEEPING_DIR: $(LOCAL_REPO_BOOKKEEPING_DIR)/$(REPO_REV)
LOCAL_COPY_OF_REMOTE_INFO_MAP_PATH: $(LOCAL_REPO_REV_BOOKKEEPING_DIR)/remote_info_map.txt
INSTL_HISTORY_PATH: $(SITE_REPO_BOOKKEEPING_DIR)/instl_history.txt
INSTL_HISTORY_TEMP_PATH: $(SITE_REPO_BOOKKEEPING_DIR)/instl_history.temp.txt
XCOPY_EXCLUDE_FILE_NAME: xcopy-exclude.txt
XCOPY_EXCLUDE_FILE_PATH: $(LOCAL_REPO_SYNC_DIR)/$(XCOPY_EXCLUDE_FILE_NAME)

# VENDOR_DIR_NAME should be overridden by the index.yaml file to reflect the specific vendor that created the install
VENDOR_DIR_NAME: ACME
SITE_BOOKKEEPING_DIR: $(__SITE_CONFIG_DIR__)
SITE_VENDOR_BOOKKEEPING_DIR: $(SITE_BOOKKEEPING_DIR)/$(VENDOR_DIR_NAME)
SITE_REPO_BOOKKEEPING_DIR: $(SITE_VENDOR_BOOKKEEPING_DIR)/$(REPO_NAME)
SITE_HAVE_INFO_MAP_PATH: $(SITE_REPO_BOOKKEEPING_DIR)/$(HAVE_INFO_MAP_FILE_NAME)

SITE_REQUIRE_FILE_NAME: require.yaml
SITE_REQUIRE_FILE_PATH: $(SITE_REPO_BOOKKEEPING_DIR)/$(SITE_REQUIRE_FILE_NAME)
NEW_SITE_REQUIRE_FILE_PATH: $(SITE_REPO_BOOKKEEPING_DIR)/new_$(SITE_REQUIRE_FILE_NAME)

# By default source folder are specified in the index without the OS prefix (Mac/Win)
SOURCE_PREFIX: $(TARGET_OS)


COPY_IGNORE_PATTERNS:
    - "*.done"

RSYNC_PERM_OPTIONS: a+rw,+X

WTAR_RATIO: 1.3

# usually copy is done from the sync folder, but using a separate variable
# allows us to specify a different folder
COPY_SOURCES_ROOT_DIR: $(LOCAL_REPO_SYNC_DIR)

# if require.yaml exists REQUIRE_REPO_REV will be overridden
REQUIRE_REPO_REV: 0

# default version for iids that do not have explicity version
DEFAULT_IID_VERSION: 0.0.0

OUTPUT_FORMAT: $(__OUTPUT_FORMAT__)

SPECIAL_BUILD_IN_IIDS:
    - __ALL_ITEMS_IID__
    - __ALL_GUIDS_IID__
    - __UPDATE_INSTALLED_ITEMS__
    - __REPAIR_INSTALLED_ITEMS__

# should index items under "previous_sources" be removed?
REMOVE_PREVIOUS_SOURCES: yes
